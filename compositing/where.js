where = {
	mode: 1,
	modes: ['', 'map', 'transit', 'compass', 'weather'],

	start: function(watch) {
		watch.mode = 3;
		$('.h1').fadeOut(250, function() {
			$(this).text('where');
			$(this).fadeIn(250);
		});
		$('.h2').fadeOut(250, function() {
			$(this).text(where.modes[where.mode]);
			$(this).fadeIn(250);
		});
		where[where.modes[where.mode]].start(watch);
	},

	end: function(watch, callback) {
		where[where.modes[where.mode]].end(watch, callback);
	},

	map: {
		start: function(watch) {
			setInstructions(watch, '● to demo rural map', '●● to toggle zoom', '↺ to manually set', 'map rotation');
			updateWhereDots(watch);
			watch.maplines = watch.canvas.path(where.map.mapdata[where.map.mapdata.mode].lines)
				.transform('t' + (watch.x - 107.5) + ',' + (watch.y - 107.5))
				.attr({'class': 'maplines'});
			watch.maplabels = watch.canvas.path(where.map.mapdata[where.map.mapdata.mode].labels)
				.transform('t' + (watch.x - 107.5) + ',' + (watch.y - 107.5))
				.attr({'class': 'maplabels'});
			watch.mask = watch.canvas.circle(watch.x, watch.y, (watch.width/2) - 1).attr({
				'fill': watch.canvas.gradient("r(0.5, 0.5, 0.5)#fff:50-#000:90"),
				'class': 'mapmask'
			});
			watch.mapgroup = watch.canvas.group(
				watch.maplines,
				watch.maplabels
			).attr({'class': 'map'});
			watch.interface.add(
				watch.mask,
				watch.mapgroup
			);
			watch.interface.attr({'mask': watch.mask});

			$('.maplines').animate({'opacity': '.25'}, 500);
			$('.maplabels').animate({'opacity': '1'}, 500);

			setTime(watch, where.map.mapdata[where.map.mapdata.mode].hands[0], where.map.mapdata[where.map.mapdata.mode].hands[1], 500);

			watch.heading = 0;
			if (window.DeviceOrientationEvent) {
				deviceorientation = 1;
				window.addEventListener('deviceorientation', function(e) {
					if ((typeof e.webkitCompassHeading != 'undefined') && (deviceorientation == 1)) {
						watch.heading = e.webkitCompassHeading;
					}
				});
				compassUpdate = setInterval(function() {
					if (watch.heading > 0) {
						if (typeof watch.initialheading == 'undefined') {
							watch.initialheading = watch.heading;
						}
						setTime(watch, where.map.mapdata[where.map.mapdata.mode].hands[0] - (watch.heading - watch.initialheading), where.map.mapdata[where.map.mapdata.mode].hands[1] - (watch.heading - watch.initialheading), 100);
						watch.mapgroup.animate({transform: 'r' + -(watch.heading - watch.initialheading) + ',' + watch.x + ',' + watch.y}, 100);
					}
				}, 100);
			}
		},

		end: function(watch, callback) {
			if (window.DeviceOrientationEvent) {
				deviceorientation = 0;
				clearInterval(compassUpdate);
			}
			$('.maplines, .maplabels').animate({'opacity': '0'}, 250).promise().done(function() {
				if (typeof watch.maprotation != 'undefined') {
					watch.mapgroup.animate({transform: 'r' + 0 + ',' + watch.x + ',' + watch.y}, 250);
					delete watch.maprotation;
				}
				delete watch.maplines;
				delete watch.maplabels;
				delete watch.mapgroup;
				delete watch.mask;
				delete watch.heading;
				delete watch.zoomed;
				watch.interface.clear();
				$('.interface').removeAttr('mask');
				callback(watch);
			});
		},

		mapdata: {
			mode: 'urbanmap',
			urbanmap: {
				lines: 'M215.1,54l-0.3-1.8l-31.7,5.2L177.7,24l37.5-6.1l-0.3-1.8l-37.5,6.1l-3.6-22.3l-1.8,0.3l3.6,22.3l-48,7.9l-5-30.5l-1.8,0.3l5,30.5l-46.9,7.7L72.5-0.1l-1.8,0.3L77,38.6l-47.7,7.8L21.7-0.1l-1.8,0.3l7.6,46.5l-27.6,4.5L0.1,53l27.6-4.5l5.5,33.4l-33.4,5.5l0.3,1.8l33.4-5.5l5.6,34.3l-39.3,6.4l0.3,1.8l39.3-6.4l5.4,33.2l-45,7.4l0.3,1.8l45-7.4l5.5,33.5l-50.8,8.3l0.3,1.8l50.8-8.3l4.1,25l1.8-0.3l-4.1-25l47.7-7.8l5.4,33.1l1.8-0.3l-5.4-33.1l46.9-7.7l6.7,41l1.8-0.3l-6.7-41l48-7.9l8,49.2l1.8-0.3l-8-49.2l14.3-2.3l-0.3-1.8l-14.3,2.3l-5.5-33.5l20.1-3.3l-0.3-1.8l-20.1,3.3l-5.4-33.2l25.8-4.2l-0.3-1.8L189,93.4l-5.6-34.3L215.1,54z M96.2,144.6l-5.4-33.2l46.9-7.7l5.4,33.2L96.2,144.6z M90.5,109.6l-5.6-34.3l46.9-7.7l5.6,34.3L90.5,109.6z M133.3,65.5l-5.5-33.3l48-7.9l5.5,33.3L133.3,65.5z M131.5,65.8l-46.9,7.7l-5.5-33.3l46.9-7.7L131.5,65.8z M82.7,73.7l-47.7,7.8l-5.5-33.4l47.7-7.8L82.7,73.7z M83,75.6l5.6,34.3L41,117.7l-5.6-34.3L83,75.6z M89,111.7l5.4,33.2l-47.7,7.8l-5.4-33.2L89,111.7z M94.7,146.7l5.5,33.5l-47.7,7.8L47,154.5L94.7,146.7z M96.5,146.4l46.9-7.7l5.5,33.5L102,180L96.5,146.4z M145.2,138.5l48-7.9l5.5,33.5l-48,7.9L145.2,138.5z M144.9,136.6l-5.4-33.2l48-7.9l5.4,33.2L144.9,136.6z M139.2,101.6l-5.6-34.3l48-7.9l5.6,34.3L139.2,101.6z',
				labels: 'M139.3,102.6 M128.7,42.6c-1.4,0.2-2.5-0.7-2.8-2.3c-0.3-1.6,0.5-2.8,1.9-3.1c0.7-0.1,1.4,0,2.1,0.4l-0.2-0.9c-0.5-0.3-1.3-0.4-2-0.3c-1.8,0.3-3,1.9-2.7,4c0.4,2.1,1.9,3.2,3.7,2.9c0.8-0.1,1.7-0.5,2.2-1.4l-0.4-2.6l-2.3,0.4l0.1,0.7l1.5-0.3l0.3,1.6C129.8,42.3,129.3,42.5,128.7,42.6z M136,39.7l-0.1-0.3c-0.2-1.4-1.1-2.3-2.4-2c-1.3,0.2-2,1.4-1.7,2.9c0.3,1.5,1.4,2.3,2.8,2.1c0.6-0.1,1.1-0.3,1.4-0.7l-0.1-0.8c-0.4,0.4-0.8,0.6-1.3,0.7c-0.9,0.2-1.7-0.3-1.9-1.4L136,39.7z M133.6,38.1c0.8-0.1,1.3,0.4,1.4,1.1l-2.5,0.4C132.5,38.7,133,38.2,133.6,38.1z M139.7,38.8c-0.2-0.2-0.8-0.3-1.3-0.2c-1,0.2-1.7,0.9-1.6,1.8c0.2,1,1.1,1.4,2.1,1.2c0.6-0.1,1-0.4,1.2-0.7l0.1,0.4l0.8-0.1l-0.6-3.3c-0.2-1-1-1.5-2.1-1.4c-0.6,0.1-1.2,0.4-1.4,0.7L137,38c0.4-0.3,0.8-0.6,1.3-0.7c0.7-0.1,1.2,0.2,1.3,0.8L139.7,38.8z M140,40.2c-0.1,0.4-0.5,0.7-1,0.8c-0.6,0.1-1.2-0.1-1.3-0.7c-0.1-0.6,0.4-0.9,1-1c0.5-0.1,1,0.1,1.2,0.4L140,40.2z M144,35.7c-0.1,0-0.3,0-0.5,0c-0.5,0.1-0.9,0.5-1.1,0.9l-0.1-0.6l-0.8,0.1l0.8,4.9l0.8-0.1l-0.6-3.3c0.1-0.6,0.5-1,1-1.1c0.2,0,0.4,0,0.6,0L144,35.7z M147.6,42l1.5-7.2l-0.9,0.1l-0.8,4.1l-2.1-3.6l-0.9,0.2l2.7,4.6l-0.4,2L147.6,42z M152.9,38.7c0.5,0.3,1.3,0.4,2.2,0.3c1.3-0.2,2.1-1.1,2-2.2c-0.2-0.9-0.7-1.4-1.8-1.6l-1.1-0.2c-0.7-0.1-1.1-0.3-1.2-0.9c-0.1-0.7,0.4-1.1,1.2-1.2c0.8-0.1,1.4,0,2,0.4l-0.2-0.9c-0.6-0.3-1.3-0.3-2-0.2c-1.2,0.2-2.1,1-1.9,2.1c0.2,1.1,1,1.4,1.8,1.6l1,0.2c0.8,0.2,1.2,0.4,1.3,0.9c0.1,0.7-0.4,1.2-1.3,1.3c-0.8,0.1-1.5,0-2.2-0.4L152.9,38.7z M159.2,33.9l1.1-0.2l-0.1-0.7l-1.1,0.2l-0.2-1.3L158,32l0.2,1.3l-1,0.2l0.1,0.7l1-0.2l0.7,4.2l0.8-0.1L159.2,33.9z M161.3,37.2c0.1,0.3,0.4,0.5,0.7,0.5c0.3-0.1,0.5-0.4,0.5-0.7c-0.1-0.3-0.4-0.6-0.7-0.5C161.4,36.6,161.2,36.9,161.3,37.2z M99.6,65.1c-0.3-2-1.9-3.2-3.6-2.9c-1.8,0.3-2.8,1.9-2.4,4c0.3,2,1.9,3.2,3.6,2.9C98.9,68.8,100,67.1,99.6,65.1z M98.7,65.3c0.3,1.6-0.4,2.8-1.7,3c-1.3,0.2-2.4-0.7-2.6-2.3c-0.3-1.6,0.4-2.8,1.7-3C97.4,62.7,98.5,63.7,98.7,65.3z M100.1,63.8l0.6-0.1l0.4-1c0.1-0.2,0.2-0.5,0.1-0.7c-0.1-0.4-0.4-0.6-0.7-0.5c-0.3,0.1-0.6,0.3-0.5,0.7c0.1,0.3,0.3,0.5,0.6,0.5L100.1,63.8z M104.1,67.8l-0.5-2.9l3-0.5l-0.1-0.8l-3,0.5l-0.4-2.3l3.2-0.5l-0.1-0.8l-4.1,0.7l1.1,6.7L104.1,67.8z M110.5,64.1c-0.2-0.2-0.8-0.3-1.3-0.2c-1,0.2-1.7,0.9-1.6,1.8c0.2,1,1.1,1.4,2.1,1.2c0.6-0.1,1-0.4,1.2-0.7l0.1,0.4l0.8-0.1l-0.6-3.3c-0.2-1-1-1.5-2.1-1.4c-0.6,0.1-1.2,0.4-1.4,0.7l0.1,0.8c0.4-0.3,0.8-0.6,1.3-0.7c0.7-0.1,1.2,0.2,1.3,0.8L110.5,64.1z M110.7,65.4c-0.1,0.4-0.5,0.7-1,0.8c-0.6,0.1-1.2-0.1-1.3-0.7c-0.1-0.6,0.4-0.9,1-1c0.5-0.1,1,0.1,1.2,0.4L110.7,65.4z M114.8,61c-0.1,0-0.3,0-0.5,0c-0.5,0.1-0.9,0.5-1.1,0.9l-0.1-0.6l-0.8,0.1l0.8,4.9l0.8-0.1l-0.6-3.3c0.1-0.6,0.5-1,1-1.1c0.2,0,0.4,0,0.6,0L114.8,61z M118.3,60.4c-0.1,0-0.3,0-0.5,0c-0.5,0.1-0.9,0.5-1.1,0.9l-0.1-0.6l-0.8,0.1l0.8,4.9l0.8-0.1l-0.6-3.3c0.1-0.6,0.5-1,1-1.1c0.2,0,0.4,0,0.6,0L118.3,60.4z M123.4,62.2l0-0.3c-0.2-1.4-1.1-2.3-2.4-2c-1.3,0.2-2,1.4-1.7,2.9c0.3,1.5,1.4,2.3,2.8,2.1c0.6-0.1,1.1-0.3,1.4-0.7l-0.1-0.8c-0.4,0.4-0.8,0.6-1.3,0.7c-0.9,0.2-1.7-0.3-1.9-1.4L123.4,62.2z M121.1,60.5c0.8-0.1,1.3,0.4,1.4,1.1l-2.5,0.4C120,61.2,120.5,60.7,121.1,60.5z M124.5,57l-0.8,0.1l1.2,7.1l0.8-0.1L124.5,57z M126.8,56.6l-0.8,0.1l1.2,7.1l0.8-0.1L126.8,56.6z M131.6,62.6c0.5,0.3,1.3,0.4,2.2,0.3c1.3-0.2,2.1-1.1,2-2.2c-0.2-0.9-0.7-1.4-1.8-1.6l-1.1-0.2c-0.7-0.1-1.1-0.3-1.2-0.9c-0.1-0.7,0.4-1.1,1.2-1.2c0.8-0.1,1.4,0,2,0.4l-0.2-0.9c-0.6-0.3-1.3-0.3-2-0.2c-1.2,0.2-2.1,1-1.9,2.1c0.2,1.1,1,1.4,1.8,1.6l1,0.2c0.8,0.2,1.2,0.4,1.3,0.9c0.1,0.7-0.4,1.2-1.3,1.3c-0.8,0.1-1.5,0-2.2-0.4L131.6,62.6z M137.8,57.8l1.1-0.2l-0.1-0.7l-1.1,0.2l-0.2-1.3l-0.8,0.1l0.2,1.3l-1,0.2l0.1,0.7l1-0.2l0.7,4.2l0.8-0.1L137.8,57.8z M139.9,61.2c0.1,0.3,0.4,0.5,0.7,0.5c0.3-0.1,0.5-0.3,0.5-0.7c-0.1-0.3-0.4-0.6-0.7-0.5C140.1,60.5,139.9,60.8,139.9,61.2z M96.8,135.6l1.1,6.7l4.3-0.7l-0.1-0.8l-3.4,0.6l-0.4-2.3l3.1-0.5l-0.1-0.8l-3.1,0.5l-0.4-2.1l3.4-0.6l-0.1-0.8L96.8,135.6z M106.6,140.8l0.8-0.1l-1.2-7.1l-0.8,0.1l0.5,2.8c-0.3-0.3-0.9-0.5-1.5-0.4c-1.4,0.2-2,1.5-1.8,2.9c0.2,1.4,1.2,2.4,2.6,2.2c0.6-0.1,1.1-0.5,1.3-0.9L106.6,140.8z M106.4,139.4c-0.2,0.5-0.6,0.9-1.1,1c-0.9,0.2-1.6-0.5-1.8-1.5c-0.2-1,0.2-1.9,1.2-2c0.5-0.1,1,0.1,1.4,0.6L106.4,139.4z M112.1,139.9l0.8-0.1l-1.2-7.1l-0.8,0.1l0.5,2.8c-0.3-0.3-0.9-0.5-1.5-0.4c-1.4,0.2-2,1.5-1.8,2.9c0.2,1.4,1.2,2.4,2.6,2.2c0.6-0.1,1.1-0.5,1.3-0.9L112.1,139.9z M111.9,138.4c-0.2,0.5-0.6,0.9-1.1,1c-0.9,0.2-1.6-0.5-1.8-1.5s0.2-1.9,1.2-2c0.5-0.1,1,0.1,1.4,0.6L111.9,138.4z M116.2,141.1l1.5-7.2l-0.9,0.1l-0.8,4.1l-2.1-3.6l-0.9,0.2l2.7,4.6l-0.4,2L116.2,141.1z M121.5,137.8c0.5,0.3,1.3,0.4,2.2,0.3c1.3-0.2,2.1-1.1,2-2.2c-0.2-0.9-0.7-1.4-1.8-1.6l-1.1-0.2c-0.7-0.1-1.1-0.3-1.2-0.9c-0.1-0.7,0.4-1.1,1.2-1.2c0.8-0.1,1.4,0,2,0.4l-0.2-0.9c-0.6-0.3-1.3-0.3-2-0.2c-1.2,0.2-2.1,1-1.9,2.1c0.2,1.1,1,1.4,1.8,1.6l1,0.2c0.8,0.2,1.2,0.4,1.3,0.9c0.1,0.7-0.4,1.2-1.3,1.3c-0.8,0.1-1.5,0-2.2-0.4L121.5,137.8z M127.7,133l1.1-0.2l-0.1-0.7l-1.1,0.2l-0.2-1.3l-0.8,0.1l0.2,1.3l-1,0.2l0.1,0.7l1-0.2l0.7,4.2l0.8-0.1L127.7,133z M129.8,136.3c0.1,0.3,0.4,0.5,0.7,0.5c0.3-0.1,0.5-0.4,0.5-0.7c-0.1-0.3-0.4-0.6-0.7-0.5C130,135.7,129.8,136,129.8,136.3z M113.7,170.1l2.3-0.4l1,6l0.9-0.1l-1-6l2.3-0.4l-0.1-0.8l-5.5,0.9L113.7,170.1z M123.7,169.5l-0.8,0.1l0.6,3.3c-0.1,0.6-0.5,1-1.1,1.1c-0.7,0.1-1.1-0.3-1.3-1l-0.5-3.1l-0.8,0.1l0.5,3.2c0.2,1.1,0.9,1.7,2,1.5c0.6-0.1,1.1-0.5,1.3-1l0.1,0.6l0.8-0.1L123.7,169.5z M127.7,168.8c-0.1,0-0.3,0-0.5,0c-0.5,0.1-0.9,0.5-1.1,0.9l-0.1-0.6l-0.8,0.1l0.8,4.9l0.8-0.1l-0.6-3.3c0.1-0.6,0.5-1,1-1.1c0.2,0,0.4,0,0.6,0L127.7,168.8z M130.7,170.6l2-2.6l-1.1,0.2l-1.8,2.4l-0.7-4.3l-0.8,0.1l1.2,7.1l0.8-0.1l-0.4-2.4l2.7,2l1-0.2L130.7,170.6z M136.4,171.8c0.5,0.3,1.3,0.4,2.2,0.3c1.3-0.2,2.1-1.1,2-2.2c-0.2-0.9-0.7-1.4-1.8-1.6l-1.1-0.2c-0.7-0.1-1.1-0.3-1.2-0.9c-0.1-0.7,0.4-1.1,1.2-1.2c0.8-0.1,1.4,0,2,0.4l-0.2-0.9c-0.6-0.3-1.3-0.3-2-0.2c-1.2,0.2-2.1,1-1.9,2.1c0.2,1.1,1,1.4,1.8,1.6l1,0.2c0.8,0.2,1.2,0.4,1.3,0.9c0.1,0.7-0.4,1.2-1.3,1.3c-0.8,0.1-1.5,0-2.2-0.4L136.4,171.8z M142.7,167l1.1-0.2l-0.1-0.7l-1.1,0.2l-0.2-1.3l-0.8,0.1l0.2,1.3l-1,0.2l0.1,0.7l1-0.2l0.7,4.2l0.8-0.1L142.7,167z M144.8,170.4c0.1,0.3,0.4,0.5,0.7,0.5c0.3-0.1,0.5-0.3,0.5-0.7c-0.1-0.3-0.4-0.6-0.7-0.5C144.9,169.7,144.7,170,144.8,170.4z M79,20.2l0.7,4.3l0.8-0.1l-0.6-3.4l5.9-1L85.7,19L79,20.2z M83,27.9c0.2-0.2,0.3-0.8,0.2-1.3c-0.2-1-0.9-1.7-1.8-1.6c-1,0.2-1.4,1.1-1.2,2.1c0.1,0.6,0.4,1,0.7,1.2l-0.4,0.1l0.1,0.8l3.3-0.6c1-0.2,1.5-1,1.4-2.1c-0.1-0.6-0.4-1.2-0.7-1.4l-0.8,0.1c0.3,0.4,0.6,0.8,0.7,1.3c0.1,0.7-0.2,1.2-0.8,1.3L83,27.9z M81.6,28.1c-0.4-0.1-0.7-0.5-0.8-1c-0.1-0.6,0.1-1.2,0.7-1.3c0.6-0.1,0.9,0.4,1,1c0.1,0.5-0.1,1-0.4,1.2L81.6,28.1z M86.1,32.2c0-0.1,0-0.3,0-0.5c-0.1-0.5-0.5-0.9-0.9-1.1l0.6-0.1l-0.1-0.8l-4.9,0.8l0.1,0.8l3.3-0.6c0.6,0.1,1,0.5,1.1,1c0,0.2,0,0.4,0,0.6L86.1,32.2z M84.3,35.2l2.6,2l-0.2-1.1l-2.4-1.8l4.3-0.7l-0.1-0.8L81.4,34l0.1,0.8l2.4-0.4l-2,2.7l0.2,1L84.3,35.2z M87.2,38.9L87,38.1l-4.9,0.8l0.1,0.8L87.2,38.9z M88.7,38.8c0.3-0.1,0.5-0.3,0.4-0.6c0-0.3-0.3-0.5-0.6-0.4c-0.3,0-0.5,0.3-0.4,0.6C88.1,38.6,88.4,38.8,88.7,38.8z M82.6,41.2l0.1,0.8l3.3-0.6c0.6,0.1,1,0.5,1.1,1.1c0.1,0.7-0.3,1.2-1,1.3l-3.1,0.5l0.1,0.8l3.2-0.5c1.1-0.2,1.7-0.9,1.5-2c-0.1-0.6-0.5-1.1-1-1.3l0.6-0.1l-0.1-0.8L82.6,41.2z M84.4,48.6c-0.3,0.5-0.4,1.3-0.3,2.2c0.2,1.3,1.1,2.1,2.2,2c0.9-0.2,1.4-0.7,1.6-1.8l0.2-1.1c0.1-0.7,0.3-1.1,0.9-1.2c0.7-0.1,1.1,0.4,1.2,1.2c0.1,0.8,0,1.4-0.4,2l0.9-0.2c0.3-0.6,0.3-1.3,0.2-2c-0.2-1.2-1-2.1-2.1-1.9c-1.1,0.2-1.4,1-1.6,1.8l-0.2,1c-0.2,0.8-0.4,1.2-0.9,1.3c-0.7,0.1-1.2-0.4-1.3-1.3c-0.1-0.8,0-1.5,0.4-2.2L84.4,48.6z M89.2,54.9l0.2,1.1l0.7-0.1l-0.2-1.1l1.3-0.2L91,53.7l-1.3,0.2l-0.2-1L88.9,53l0.2,1l-4.2,0.7l0.1,0.8L89.2,54.9z M85.8,57c-0.3,0.1-0.5,0.4-0.5,0.7c0.1,0.3,0.4,0.5,0.7,0.5c0.3-0.1,0.6-0.4,0.5-0.7C86.5,57.1,86.1,56.9,85.8,57z M49.9,141.7c0.2,1.4,1.1,2.1,2.4,1.9c1.3-0.2,1.9-1.2,1.6-2.6l-0.4-2.5l-6.7,1.1l0.1,0.9l2.7-0.5L49.9,141.7z M52.2,142.8c-0.8,0.1-1.3-0.3-1.5-1.2l-0.3-1.6l2.5-0.4l0.3,1.6C53.4,142.1,53,142.7,52.2,142.8z M50.9,149c1.5-0.3,2.4-1.3,2.1-2.7c-0.2-1.3-1.4-2.1-2.9-1.8c-1.5,0.3-2.4,1.3-2.1,2.7C48.2,148.5,49.4,149.3,50.9,149z M50.8,148.2c-1.1,0.2-1.9-0.2-2-1.1c-0.1-0.9,0.5-1.5,1.6-1.7c1.1-0.2,1.9,0.2,2,1.1C52.5,147.3,51.8,148,50.8,148.2z M55.9,150.1l-0.1-0.8l-7.1,1.2l0.1,0.8L55.9,150.1z M52,154l2.6,2l-0.2-1.1l-2.4-1.8l4.3-0.7l-0.1-0.8l-7.1,1.2l0.1,0.8l2.4-0.4l-2,2.7l0.2,1L52,154z M50.8,159.7c-0.3,0.5-0.4,1.3-0.3,2.2c0.2,1.3,1.1,2.1,2.2,2c0.9-0.2,1.4-0.7,1.6-1.8l0.2-1.1c0.1-0.7,0.3-1.1,0.9-1.2c0.7-0.1,1.1,0.4,1.2,1.2c0.1,0.8,0,1.4-0.4,2l0.9-0.2c0.3-0.6,0.3-1.3,0.2-2c-0.2-1.2-1-2.1-2.1-1.9c-1.1,0.2-1.4,1-1.6,1.8l-0.2,1c-0.2,0.8-0.4,1.2-0.9,1.3c-0.7,0.1-1.2-0.4-1.3-1.3c-0.1-0.8,0-1.5,0.4-2.2L50.8,159.7z M55.6,166l0.2,1.1l0.7-0.1l-0.2-1.1l1.3-0.2l-0.1-0.8l-1.3,0.2l-0.2-1l-0.7,0.1l0.2,1l-4.2,0.7l0.1,0.8L55.6,166z M52.2,168.1c-0.3,0.1-0.5,0.4-0.5,0.7c0.1,0.3,0.4,0.5,0.7,0.5s0.6-0.4,0.5-0.7C52.9,168.3,52.5,168,52.2,168.1z M169.2,45.5l0.7,4.3l0.8-0.1l-0.6-3.4l5.9-1l-0.1-0.9L169.2,45.5z M173,54.3l0.3-0.1c1.4-0.2,2.3-1.1,2-2.4c-0.2-1.3-1.4-2-2.9-1.7c-1.5,0.3-2.3,1.4-2.1,2.8c0.1,0.6,0.3,1.1,0.7,1.4l0.8-0.1c-0.4-0.4-0.6-0.8-0.7-1.3c-0.2-0.9,0.3-1.7,1.4-1.9L173,54.3z M174.7,52c0.1,0.8-0.4,1.3-1.1,1.4l-0.4-2.5C174,50.9,174.6,51.4,174.7,52z M174,58.1c0.2-0.2,0.3-0.8,0.2-1.3c-0.2-1-0.9-1.7-1.8-1.6c-1,0.2-1.4,1.1-1.2,2.1c0.1,0.6,0.4,1,0.7,1.2l-0.4,0.1l0.1,0.8l3.3-0.6c1-0.2,1.5-1,1.4-2.1c-0.1-0.6-0.4-1.2-0.7-1.4l-0.8,0.1c0.3,0.4,0.6,0.8,0.7,1.3c0.1,0.7-0.2,1.2-0.8,1.3L174,58.1z M172.6,58.3c-0.4-0.1-0.7-0.5-0.8-1c-0.1-0.6,0.1-1.2,0.7-1.3c0.6-0.1,0.9,0.4,1,1c0.1,0.5-0.1,1-0.4,1.2L172.6,58.3z M172.1,62.8l5.2,1.1l-0.1-0.9l-4.1-0.8l3.6-2.1l-0.2-0.9L172,62L172.1,62.8z M175.5,69l0.3-0.1c1.4-0.2,2.3-1.1,2-2.4c-0.2-1.3-1.4-2-2.9-1.7c-1.5,0.3-2.3,1.4-2.1,2.8c0.1,0.6,0.3,1.1,0.7,1.4l0.8-0.1c-0.4-0.4-0.6-0.8-0.7-1.3c-0.2-0.9,0.3-1.7,1.4-1.9L175.5,69z M177.2,66.7c0.1,0.8-0.4,1.3-1.1,1.4l-0.4-2.5C176.5,65.6,177,66,177.2,66.7z M173.4,70.5l0.1,0.8l3.3-0.6c0.6,0.1,1,0.5,1.1,1.1c0.1,0.7-0.3,1.2-1,1.3l-3.1,0.5l0.1,0.8l3.2-0.5c1.1-0.2,1.7-0.9,1.5-2c-0.1-0.6-0.5-1.1-1-1.3l0.6-0.1l-0.1-0.8L173.4,70.5z M179.7,78.1l-0.1-0.7l-3.9-0.4l3.5-1.7l-0.1-0.8l-4.6,2.3l0.1,0.8l3.9,0.4l-3.5,1.6l0.1,0.8l5.1,0.6l-0.1-0.8l-3.9-0.4L179.7,78.1z M178.6,86.4c1.5-0.3,2.4-1.3,2.1-2.7c-0.2-1.3-1.4-2.1-2.9-1.8c-1.5,0.3-2.4,1.3-2.1,2.7C175.9,86,177.1,86.7,178.6,86.4z M178.5,85.6c-1.1,0.2-1.9-0.2-2-1.1s0.5-1.5,1.6-1.7c1.1-0.2,1.9,0.2,2,1.1S179.5,85.4,178.5,85.6z M181.7,89.6c0-0.1,0-0.3,0-0.5c-0.1-0.5-0.5-0.9-0.9-1.1l0.6-0.1l-0.1-0.8l-4.9,0.8l0.1,0.8l3.3-0.6c0.6,0.1,1,0.5,1.1,1c0,0.2,0,0.4,0,0.6L181.7,89.6z M181.4,92.1l0.2,1.1l0.7-0.1l-0.2-1.1l1.3-0.2l-0.1-0.8l-1.3,0.2l-0.2-1l-0.7,0.1l0.2,1l-4.2,0.7l0.1,0.8L181.4,92.1z M177.6,95l0.1,0.8l3.3-0.6c0.6,0.1,1,0.5,1.1,1.1c0.1,0.7-0.3,1.2-1,1.3l-3.1,0.5l0.1,0.8l3.2-0.5c1.1-0.2,1.7-0.9,1.5-2c-0.1-0.6-0.5-1.1-1-1.3l2.9-0.5l-0.1-0.8L177.6,95z M179.4,102.4c-0.3,0.5-0.4,1.3-0.3,2.2c0.2,1.3,1.1,2.1,2.2,2c0.9-0.2,1.4-0.7,1.6-1.8l0.2-1.1c0.1-0.7,0.3-1.1,0.9-1.2c0.7-0.1,1.1,0.4,1.2,1.2c0.1,0.8,0,1.4-0.4,2l0.9-0.2c0.3-0.6,0.3-1.3,0.2-2c-0.2-1.2-1-2.1-2.1-1.9c-1.1,0.2-1.4,1-1.6,1.8l-0.2,1c-0.2,0.8-0.4,1.2-0.9,1.3c-0.7,0.1-1.2-0.4-1.3-1.3c-0.1-0.8,0-1.5,0.4-2.2L179.4,102.4z M184.2,108.6l0.2,1.1l0.7-0.1l-0.2-1.1l1.3-0.2l-0.1-0.8l-1.3,0.2l-0.2-1l-0.7,0.1l0.2,1l-4.2,0.7l0.1,0.8L184.2,108.6z M180.8,110.7c-0.3,0.1-0.5,0.4-0.5,0.7c0.1,0.3,0.4,0.5,0.7,0.5s0.6-0.4,0.5-0.7C181.4,110.9,181.1,110.7,180.8,110.7z M42.7,101.2l1.5,9l5.9-1l-0.2-1.4l-4.4,0.7L45,106l4-0.6l-0.2-1.3l-4,0.6l-0.4-2.4l4.4-0.7l-0.2-1.3L42.7,101.2z M51.5,99.2L50,99.4l1.5,9.5l1.5-0.2L51.5,99.2z M54.8,98.7l-1.5,0.2l1.5,9.5l1.5-0.2L54.8,98.7z M58.4,99.2c-0.1-0.5-0.6-0.8-1-0.7s-0.8,0.5-0.8,1c0.1,0.5,0.6,0.8,1.1,0.7S58.5,99.7,58.4,99.2z M58.5,101.1l-1.5,0.2l1.1,6.5l1.5-0.2L58.5,101.1z M61,106.9c0.6,0.3,1.5,0.5,2.3,0.3c1.4-0.2,2.4-1.1,2.2-2.4c-0.2-1-0.8-1.5-2-1.6l-0.9-0.1c-0.6-0.1-0.9-0.2-1-0.6c-0.1-0.4,0.3-0.7,0.9-0.8c0.8-0.1,1.4,0.1,2.1,0.5l-0.2-1.5c-0.6-0.3-1.3-0.4-2-0.3c-1.4,0.2-2.3,1.2-2.1,2.3c0.2,1.1,0.9,1.5,2.1,1.7l0.7,0.1c0.5,0.1,0.9,0.2,1,0.6c0.1,0.5-0.4,0.8-1,0.9c-0.8,0.1-1.6-0.1-2.3-0.6L61,106.9z M70.1,105.3c0.7,0.3,1.8,0.5,3,0.3c1.8-0.3,3.1-1.4,2.8-3.1c-0.2-1.3-1-2-2.5-2.3l-1.5-0.3c-0.8-0.1-1.3-0.3-1.4-1c-0.1-0.7,0.5-1.2,1.4-1.3c1.1-0.2,1.9,0.1,2.8,0.5l-0.3-1.6c-0.8-0.4-1.8-0.5-2.8-0.3c-1.7,0.3-2.9,1.4-2.6,2.9c0.2,1.5,1.2,2,2.5,2.2l1.4,0.3c0.9,0.2,1.4,0.4,1.5,1.1c0.1,0.8-0.5,1.3-1.5,1.5c-1.1,0.2-2.1-0.1-3-0.6L70.1,105.3z M79.1,99.1l1.5-0.2l-0.2-1.2l-1.5,0.2l-0.3-1.7l-1.5,0.2l0.3,1.7l-1.3,0.2l0.2,1.2l1.3-0.2l0.9,5.3l1.5-0.2L79.1,99.1z M81.6,103.1c0.1,0.6,0.6,0.9,1.2,0.8c0.6-0.1,0.9-0.6,0.8-1.2c-0.1-0.6-0.6-0.9-1.2-0.8C81.9,102,81.6,102.6,81.6,103.1z M152,125.8l-2.9,0.5l-0.6-3.8l2.9-0.5l-0.1-0.9l-6.7,1.1l0.1,0.9l3.1-0.5l0.6,3.8l-3.1,0.5l0.1,0.9l6.7-1.1L152,125.8z M144,131l7.1,1.5l-0.1-0.9l-4.1-0.8l3.6-2.1l-0.1-0.9l-4.6,2.7l-1.9-0.4L144,131z M147,137.4l0.1,0.8l7.1-1.2l-0.1-0.8l-2.8,0.5c0.3-0.3,0.5-0.9,0.4-1.5c-0.2-1.4-1.5-2-2.9-1.8c-1.4,0.2-2.4,1.2-2.2,2.6c0.1,0.6,0.5,1.1,0.9,1.3L147,137.4z M148.4,137.1c-0.5-0.2-0.9-0.6-1-1.1c-0.2-0.9,0.5-1.6,1.5-1.8s1.9,0.3,2,1.2c0.1,0.5-0.1,1-0.6,1.4L148.4,137.1z M150.2,143.1l0.3,0c1.4-0.2,2.3-1.1,2.1-2.4c-0.2-1.3-1.4-2-2.9-1.8c-1.5,0.2-2.3,1.3-2.1,2.7c0.1,0.6,0.3,1.1,0.7,1.4l0.8-0.1c-0.4-0.4-0.6-0.8-0.7-1.3c-0.1-0.9,0.3-1.7,1.4-1.9L150.2,143.1z M151.9,140.8c0.1,0.8-0.4,1.2-1.1,1.4l-0.4-2.5C151.3,139.7,151.8,140.1,151.9,140.8z M149,146.6c-0.3,0.5-0.4,1.3-0.3,2.2c0.2,1.3,1.1,2.2,2.2,2c0.9-0.2,1.4-0.7,1.6-1.8l0.2-1.1c0.1-0.7,0.3-1.1,0.9-1.2c0.7-0.1,1.1,0.4,1.2,1.2c0.1,0.8-0.1,1.4-0.4,2l0.9-0.1c0.3-0.6,0.4-1.3,0.2-2c-0.2-1.2-1-2.1-2.1-1.9c-1.1,0.2-1.4,1-1.6,1.8l-0.2,1c-0.2,0.8-0.4,1.2-1,1.3c-0.7,0.1-1.2-0.4-1.3-1.3c-0.1-0.8,0-1.5,0.4-2.2L149,146.6z M153.8,152.9l0.2,1.1l0.7-0.1l-0.2-1.1l1.3-0.2l-0.1-0.8l-1.3,0.2l-0.2-1l-0.7,0.1l0.2,1l-4.2,0.7l0.1,0.8L153.8,152.9z M150.4,155c-0.3,0.1-0.5,0.4-0.5,0.7c0.1,0.3,0.3,0.5,0.7,0.5c0.3-0.1,0.6-0.4,0.5-0.7C151,155.2,150.7,154.9,150.4,155z',
				hands: [80.5, 260.5]
			},

			ruralmap: {
				lines: 'M157.2,96.2l10-3.8l6.8-10.6l3.1,1.9l14.1,14.7l14.2,16.1l9.6,9.2v-2.5l-8.3-7.9l-14.2-16l-14.2-14.8l-3.4-2.1l7.3-12.3l6.2-25.9l9.9-21.8l16.7-0.1l0-1.8l-17.3,0.1l-47.1,0.2l-7.3,0.3l2.6-8.8L152.7,0h-2.3l-6.1,9.3l-2.9,9.8l-24,0.9l-15.7,0.6L95.9,25l-9.3,6.8l-6.1,5.5L75,30.8l-6.2-9.3l-7.3-10.4l-4.3-9.8L56.6,0h-2.1l1,2.2l4.3,9.8l7.5,10.6l6.2,9.3l6.2,7.4l0.1,0.1l9.3,8.7l12.3,9.2l2.1,2.1L93,64.3L83.2,68l-13.1,3.8L63.3,78L58,80.3l-9,1.2h-9.8l-9.4,1.2l-6.4,2.5l-8.8,6.3l-12.4,8.7L0,102.1v2.4l3.4-2.8L15.7,93l8.5-6.1l5.9-2.4l9.1-1.2H49l9.4-1.2l5.8-2.5l6.9-6.2l12.8-3.7l9.9-3.7l11-5.2l6.4,9.8l2.5,3.3l-9.3,12.2l-5.6,9.3l-15.8,40.9l-20.8,56.1l-3.1,8l-31.7-14.3l-16.7-13.6l-10.5-1.2l-0.2,1.8l10,1.2l16.5,13.5l32,14.4L53.6,215h1.9l8.3-21.8l16.3-43.9l16.3,5.9l5.9,9.4l3.2,16l16.6-1.3l14-15.9l1.3-13.2l0-0.1l-0.6-11.7l-1.8,0.1l0.5,10l-4.9-2.9l-20.2-0.6l-13.4,8.5l-16.2-5.8l3.9-10.5l15.7-40.7l5.5-9.1l8.9-11.7l1.8,2.4l5.5,11l6.1,13.5l3.1,7.4l0.1,0.2l14.8,19.7l18,18l12.8,11.4l-4.3,6.5l-11.8,24.8l-8.6,24.5h1.9l8.4-23.8l11.7-24.6l4.1-6.2l2.9,2.6l24.8,52h2.1l-25.4-53.1l-4-3.6l-13.3-11.9l-17.8-17.8l-14-18.7l11.8-5.1L157.2,96.2z M110.8,146.8l19.2,0.6l5.4,3.3l-1.1,12l-13.1,14.9l-14.2,1.1l-2.9-14.8l-5.8-9.2L110.8,146.8z M150.6,20.6l45.7-0.2l-9.6,21.1l-6.2,25.9l-7.1,12l-5.1-3.2l-13.5-7.3l-9.2-7.3l-11.2-6.2l-4.8-2.9l1.4-1.9l7.5-15.2l4.2-14.3L150.6,20.6z M105.8,59.2l-0.1-0.2l-3.1-3.1l-12.3-9.3l-8.5-7.9l6-5.4l9.3-6.8l5.3-4.1l15.1-0.6l23.4-0.9l-4,13.4l-7.3,14.9l-1.9,2.7l-5.2,7.4l-7.7,12.9l-2.1-2.7L105.8,59.2z M132.6,108.3l-2.7-6.6l-6.2-13.6l-5.5-11.1l-2.3-3.1l8.1-13.5l4.7-6.7l4.9,3l11,6.1l9.2,7.3l13.6,7.4l5.1,3.2l-6.5,10l-9.6,3.6l-11.8,8.7L132.6,108.3z',
				labels: 'M109.6,106.6 M65,29.2l-5.4,5.3l3.4,3.4l0.6-0.6l-2.7-2.8l1.8-1.8l2.4,2.5l0.6-0.6l-2.4-2.5l1.7-1.7l2.7,2.8l0.6-0.6L65,29.2z M70.4,34l-0.6-0.7L64,39l0.6,0.7L70.4,34z M71.9,40.3c0.2-0.5,0.1-1.2-0.4-1.7c-0.5-0.5-1.1-0.6-1.6-0.5l0.5-0.4L69.7,37l-3.9,3.8l0.6,0.7l2.7-2.6c0.5-0.3,1.2-0.2,1.5,0.2c0.5,0.5,0.4,1.1-0.2,1.6L68,43.1l0.6,0.7l2.7-2.6c0.5-0.3,1.2-0.2,1.5,0.2c0.5,0.5,0.4,1.1-0.2,1.6l-2.5,2.4l0.7,0.7l2.6-2.5c0.8-0.8,1-1.8,0.2-2.6C73.2,40.3,72.5,40.2,71.9,40.3z M74.1,48.4c0.1,0.7,0.4,1.5,1.2,2.2c1,1,2.3,1.3,3.3,0.4c0.7-0.7,0.8-1.5,0.3-2.7l-0.5-1.2c-0.3-0.7-0.4-1.2,0.1-1.6c0.5-0.5,1.3-0.3,1.8,0.3c0.6,0.6,0.9,1.3,0.9,2.1l0.7-0.7c-0.1-0.7-0.5-1.4-1.1-2c-0.9-0.9-2.2-1.3-3.1-0.3c-0.9,0.8-0.6,1.8-0.3,2.6l0.5,1.1c0.3,0.8,0.4,1.3-0.1,1.7c-0.6,0.5-1.3,0.4-2-0.3c-0.6-0.6-1-1.4-1-2.3L74.1,48.4z M82.4,51.1l0.9,0.9l0.6-0.6L83,50.5l1-1l-0.6-0.7l-1,1L81.6,49L81,49.6l0.8,0.8l-3.3,3.3l0.6,0.7L82.4,51.1z M80.7,55.1c-0.3,0.3-0.3,0.7,0,0.9c0.3,0.3,0.7,0.3,0.9,0s0.3-0.7,0-0.9C81.4,54.9,81,54.8,80.7,55.1z M129.2,121.5c-1.7,1.6-1.7,3.8-0.3,5.3c0.6,0.6,1.2,0.9,1.9,1l0.7-0.7c-0.8-0.1-1.4-0.3-2-0.9c-1.1-1.1-0.9-2.7,0.4-4c1.3-1.3,2.9-1.3,4-0.2c0.5,0.6,0.8,1.2,0.8,2l0.7-0.7c0-0.6-0.3-1.3-0.9-1.9C133.1,119.9,130.9,119.9,129.2,121.5z M136.5,130.7c1.2-1.2,1.3-2.7,0.3-3.8c-1-1.1-2.6-1-3.8,0.2c-1.2,1.2-1.4,2.7-0.3,3.8C133.8,131.9,135.3,131.8,136.5,130.7z M135.9,130c-0.9,0.8-1.9,1-2.6,0.3c-0.7-0.7-0.5-1.7,0.4-2.5c0.9-0.8,1.9-1,2.6-0.3C136.9,128.2,136.7,129.2,135.9,130z M141.5,133c0.2-0.5,0.1-1.2-0.4-1.7c-0.5-0.5-1.1-0.6-1.6-0.5l0.5-0.4l-0.6-0.7l-3.9,3.8l0.6,0.7l2.7-2.6c0.5-0.3,1.2-0.2,1.5,0.2c0.5,0.5,0.4,1.1-0.2,1.6l-2.5,2.4l0.6,0.7l2.7-2.6c0.5-0.3,1.2-0.2,1.5,0.2c0.5,0.5,0.4,1.1-0.2,1.6l-2.5,2.4l0.6,0.7l2.6-2.5c0.9-0.8,1-1.8,0.2-2.6C142.8,133,142.1,132.9,141.5,133z M147.6,139.4c0.2-0.5,0.1-1.2-0.4-1.7c-0.5-0.5-1.1-0.6-1.6-0.5l0.5-0.4l-0.6-0.7l-3.9,3.8l0.6,0.7l2.7-2.6c0.5-0.3,1.2-0.2,1.5,0.2c0.5,0.5,0.4,1.1-0.2,1.6l-2.5,2.4l0.6,0.7l2.7-2.6c0.5-0.3,1.2-0.2,1.5,0.2c0.5,0.5,0.4,1.1-0.2,1.6l-2.5,2.4l0.6,0.7l2.6-2.5c0.9-0.8,1-1.8,0.2-2.6C148.9,139.4,148.2,139.3,147.6,139.4z M152.8,147.6c1.2-1.2,1.3-2.7,0.3-3.8c-1-1.1-2.6-1-3.8,0.2c-1.2,1.2-1.4,2.7-0.3,3.8C150.1,148.9,151.6,148.8,152.8,147.6z M152.2,147c-0.9,0.8-1.9,1-2.6,0.3c-0.7-0.7-0.5-1.7,0.4-2.5c0.9-0.8,1.9-1,2.6-0.3C153.2,145.1,153,146.1,152.2,147z M151.7,150.4l0.6,0.7l2.7-2.6c0.6-0.3,1.3-0.2,1.7,0.3c0.6,0.6,0.5,1.2-0.1,1.8l-2.5,2.4l0.6,0.7l2.6-2.5c0.9-0.8,1-1.9,0.1-2.8c-0.5-0.5-1.2-0.7-1.7-0.6l0.5-0.5l-0.6-0.7L151.7,150.4z M158,156.1c0.1,0.7,0.4,1.5,1.1,2.2c1,1.1,2.3,1.3,3.3,0.4c0.8-0.7,0.8-1.5,0.3-2.7l-0.5-1.2c-0.3-0.7-0.4-1.2,0.1-1.6c0.5-0.5,1.3-0.3,1.8,0.3c0.6,0.6,0.9,1.3,0.9,2.1l0.7-0.7c-0.1-0.7-0.5-1.4-1.1-2c-0.9-0.9-2.2-1.3-3.1-0.4c-0.9,0.8-0.7,1.8-0.3,2.6l0.5,1.1c0.3,0.8,0.4,1.3-0.1,1.7c-0.6,0.5-1.3,0.4-2-0.3c-0.6-0.6-1-1.4-1-2.3L158,156.1z M166.3,158.8l0.9,0.9l0.6-0.5l-0.9-0.9l1-1l-0.6-0.7l-1,1l-0.8-0.8l-0.6,0.5l0.8,0.8l-3.4,3.2l0.6,0.7L166.3,158.8z M164.5,162.9c-0.3,0.3-0.3,0.7,0,0.9c0.2,0.3,0.7,0.3,0.9,0s0.3-0.7,0-0.9C165.2,162.6,164.8,162.6,164.5,162.9z M104.5,9.8l0.2,7.6l4.8-0.1l0-0.9l-3.9,0.1l-0.1-2.6l3.5-0.1l0-0.9l-3.5,0.1l-0.1-2.4l3.9-0.1l0-0.9L104.5,9.8z M113.9,14.2c-0.2-0.2-0.8-0.4-1.4-0.4c-1.2,0-2.1,0.7-2,1.8c0,1.1,1,1.7,2.1,1.7c0.6,0,1.2-0.3,1.4-0.5l0,0.4l0.9,0l-0.1-3.7c0-1.2-0.8-1.8-2.1-1.8c-0.7,0-1.3,0.2-1.7,0.5l0,0.9c0.4-0.3,0.9-0.5,1.5-0.5c0.8,0,1.3,0.4,1.3,1.1L113.9,14.2z M113.9,15.7c-0.1,0.4-0.7,0.7-1.2,0.7c-0.7,0-1.3-0.3-1.3-0.9c0-0.7,0.6-1,1.3-1c0.6,0,1.1,0.2,1.3,0.6L113.9,15.7z M116.1,16.6c0.4,0.3,1.1,0.5,1.8,0.5c1.1,0,2-0.6,2-1.6c0-0.8-0.5-1.2-1.3-1.5l-0.8-0.3c-0.5-0.2-0.8-0.3-0.8-0.8c0-0.5,0.4-0.7,1-0.7c0.7,0,1.2,0.2,1.6,0.6l0-1c-0.5-0.3-1-0.5-1.6-0.4c-1.1,0-1.9,0.6-1.9,1.6c0,0.9,0.6,1.3,1.4,1.5l0.8,0.2c0.5,0.1,0.8,0.4,0.8,0.8c0,0.5-0.5,0.8-1.1,0.8c-0.7,0-1.3-0.2-1.8-0.7L116.1,16.6z M122.6,12.2l1.3,0l0-0.8l-1.3,0l0-1.4l-0.9,0l0,1.4l-1.1,0l0,0.8l1.1,0l0.1,4.7l0.9,0L122.6,12.2z M127.6,16.1c0.5,0.4,1.4,0.7,2.4,0.6c1.5,0,2.5-0.8,2.5-2.1c0-1-0.6-1.6-1.7-2l-1.2-0.4c-0.7-0.3-1.1-0.5-1.2-1.1c0-0.8,0.6-1.1,1.5-1.2c0.9,0,1.6,0.3,2.2,0.7l0-1c-0.6-0.4-1.4-0.6-2.2-0.6c-1.3,0-2.4,0.7-2.4,2.1c0,1.2,0.9,1.7,1.8,2l1.1,0.4c0.8,0.3,1.2,0.6,1.2,1.2c0,0.8-0.6,1.2-1.6,1.2c-0.9,0-1.7-0.2-2.4-0.8L127.6,16.1z M135.2,11.8l1.3,0l0-0.8l-1.3,0l0-1.4l-0.9,0l0,1.4l-1.1,0l0,0.8l1.1,0l0.1,4.7l0.9,0L135.2,11.8z M137,15.8c0,0.4,0.3,0.7,0.7,0.6c0.4,0,0.6-0.3,0.6-0.7c0-0.4-0.3-0.7-0.7-0.7C137.2,15.1,136.9,15.4,137,15.8z M25.9,71.7l-1,6.1L22.7,72l-1,0.1l2.7,7.3l0.9-0.1l1-6l2.2,5.7l0.9-0.1l1.3-7.7l-0.9,0.1l-1,6.1l-2.2-5.8L25.9,71.7z M36.2,75.7l0-0.3c-0.2-1.6-1-2.6-2.5-2.4c-1.4,0.1-2.3,1.4-2.1,3.1c0.2,1.7,1.3,2.7,2.9,2.5c0.6-0.1,1.2-0.3,1.6-0.6l-0.1-0.8c-0.5,0.4-0.9,0.6-1.5,0.7c-1,0.1-1.8-0.4-2-1.7L36.2,75.7z M33.8,73.7c0.9-0.1,1.4,0.6,1.5,1.4l-2.8,0.3C32.5,74.3,33,73.8,33.8,73.7z M37.4,77.7c0.4,0.3,1.1,0.4,1.8,0.4c1.1-0.1,2-0.8,1.9-1.8c-0.1-0.8-0.6-1.2-1.4-1.4l-0.9-0.2c-0.5-0.1-0.8-0.3-0.9-0.7c0-0.5,0.4-0.8,1-0.8c0.7-0.1,1.2,0.2,1.7,0.5l-0.1-1c-0.5-0.3-1.1-0.4-1.7-0.3c-1.1,0.1-1.9,0.8-1.8,1.7c0.1,0.9,0.7,1.2,1.5,1.4l0.8,0.2c0.5,0.1,0.8,0.3,0.9,0.7c0.1,0.5-0.5,0.8-1.1,0.9c-0.7,0.1-1.3-0.1-1.9-0.6L37.4,77.7z M43.6,72.8l1.3-0.1l-0.1-0.8l-1.3,0.1l-0.1-1.4l-0.9,0.1l0.1,1.4l-1.1,0.1l0.1,0.8l1.1-0.1l0.5,4.7l0.9-0.1L43.6,72.8z M48.8,76.4c0.6,0.4,1.4,0.6,2.4,0.5c1.5-0.1,2.5-1,2.3-2.3c-0.1-1-0.7-1.6-1.9-1.9l-1.2-0.3c-0.7-0.2-1.2-0.4-1.2-1.1c-0.1-0.7,0.5-1.2,1.4-1.3c0.9-0.1,1.6,0.2,2.2,0.6l-0.1-1c-0.6-0.3-1.4-0.5-2.2-0.4c-1.3,0.1-2.3,0.9-2.2,2.2c0.1,1.2,1,1.6,1.9,1.9l1.1,0.3c0.8,0.3,1.3,0.5,1.3,1.1c0.1,0.8-0.5,1.3-1.5,1.3c-0.9,0.1-1.7-0.1-2.5-0.6L48.8,76.4z M56,71.6l1.3-0.1l-0.1-0.8L56,70.8l-0.1-1.4l-0.9,0.1l0.1,1.4L53.9,71l0.1,0.8l1.1-0.1l0.5,4.7l0.9-0.1L56,71.6z M58.1,75.5c0,0.4,0.4,0.6,0.7,0.6c0.4,0,0.6-0.3,0.6-0.7c0-0.4-0.4-0.6-0.7-0.6C58.3,74.8,58.1,75.1,58.1,75.5z M145.7,119.3c0.7,0,1.5-0.2,2.4-0.8c1.2-0.8,1.7-2.1,0.9-3.1c-0.6-0.9-1.4-1.1-2.6-0.8l-1.3,0.3c-0.7,0.2-1.2,0.2-1.6-0.3c-0.4-0.6-0.1-1.3,0.6-1.8c0.7-0.5,1.5-0.6,2.2-0.6l-0.6-0.8c-0.7,0-1.5,0.2-2.1,0.7c-1.1,0.7-1.6,1.9-0.9,3c0.7,1,1.6,0.9,2.6,0.7l1.2-0.3c0.8-0.2,1.3-0.2,1.7,0.4c0.4,0.6,0.1,1.3-0.7,1.9c-0.7,0.5-1.5,0.7-2.5,0.6L145.7,119.3z M149.4,114.2c1,1.4,2.6,1.7,3.8,0.9c0.4-0.3,0.8-0.7,1-1.2l-0.5-0.8c-0.1,0.5-0.4,1-0.8,1.3c-0.8,0.5-1.9,0.4-2.6-0.7c-0.7-1-0.5-2.1,0.3-2.7c0.4-0.3,0.9-0.4,1.5-0.3l-0.5-0.8c-0.5-0.1-1,0.2-1.5,0.4C148.7,111.2,148.4,112.7,149.4,114.2z M155.3,113.4l0.8-0.5l-2.1-3.1c-0.2-0.6,0-1.3,0.6-1.6c0.7-0.5,1.3-0.2,1.7,0.4l1.9,2.8l0.8-0.5l-2-3c-0.7-1-1.7-1.3-2.7-0.6c-0.6,0.4-0.9,1-0.9,1.6l-1.8-2.7l-0.8,0.5L155.3,113.4z M162.6,105.1c-0.9-1.4-2.4-1.8-3.7-0.9c-1.2,0.8-1.4,2.4-0.5,3.8c0.9,1.4,2.4,1.8,3.7,0.9C163.4,108,163.5,106.5,162.6,105.1z M161.8,105.7c0.7,1,0.7,2-0.2,2.6c-0.8,0.6-1.8,0.2-2.4-0.8c-0.7-1-0.7-2,0.2-2.6C160.2,104.3,161.2,104.7,161.8,105.7z M167.5,101.8c-0.9-1.4-2.4-1.8-3.7-0.9c-1.2,0.8-1.4,2.4-0.5,3.8c0.9,1.4,2.4,1.8,3.7,0.9C168.2,104.7,168.4,103.2,167.5,101.8z M166.7,102.3c0.7,1,0.7,2-0.2,2.6c-0.8,0.6-1.8,0.2-2.4-0.8c-0.7-1-0.7-2,0.2-2.6C165.1,101,166,101.3,166.7,102.3z M166.3,96.2l-0.8,0.5l4.5,6.6l0.8-0.5L166.3,96.2z M173.8,100.1c0.7,0,1.5-0.2,2.4-0.8c1.2-0.8,1.7-2.1,0.9-3.1c-0.6-0.9-1.4-1.1-2.6-0.8l-1.3,0.3c-0.7,0.2-1.2,0.2-1.6-0.3c-0.4-0.6-0.1-1.3,0.6-1.8c0.7-0.5,1.5-0.6,2.2-0.6l-0.6-0.8c-0.7,0-1.5,0.2-2.1,0.7c-1.1,0.7-1.6,1.9-0.9,3c0.7,1,1.6,0.9,2.6,0.7l1.2-0.3c0.8-0.2,1.3-0.2,1.7,0.4c0.4,0.6,0.1,1.3-0.7,1.9c-0.7,0.5-1.5,0.7-2.5,0.6L173.8,100.1z M177.9,92.3l1-0.7l-0.4-0.7l-1,0.7l-0.8-1.2l-0.8,0.5l0.8,1.2l-0.9,0.6l0.4,0.7l0.9-0.6l2.6,3.9l0.8-0.5L177.9,92.3z M181.6,94.7c0.2,0.3,0.6,0.4,0.9,0.2c0.3-0.2,0.4-0.6,0.2-0.9c-0.2-0.3-0.6-0.4-0.9-0.2C181.5,94,181.4,94.4,181.6,94.7z M135.7,49.5c0.2,0.6,0.8,1.3,1.6,1.9c1.2,0.8,2.6,0.7,3.3-0.3c0.6-0.9,0.5-1.7-0.3-2.7l-0.7-1c-0.4-0.6-0.7-1.1-0.3-1.6c0.4-0.6,1.2-0.6,1.9-0.1c0.7,0.5,1.1,1.1,1.4,1.8l0.6-0.9c-0.3-0.6-0.8-1.2-1.5-1.7c-1.1-0.7-2.4-0.8-3.1,0.3c-0.6,1-0.2,1.9,0.3,2.6l0.7,1c0.5,0.7,0.7,1.2,0.3,1.7c-0.4,0.7-1.2,0.7-2,0.1c-0.7-0.5-1.3-1.1-1.5-2L135.7,49.5z M144.4,50.3l1.1,0.7l0.4-0.7l-1.1-0.7l0.8-1.2l-0.8-0.5l-0.8,1.2l-1-0.6l-0.4,0.7l1,0.6l-2.5,3.9l0.8,0.5L144.4,50.3z M149.2,55.7c0.9-1.4,0.7-2.9-0.6-3.8c-1.3-0.8-2.7-0.4-3.7,1c-0.9,1.4-0.7,2.9,0.6,3.8C146.8,57.5,148.2,57.1,149.2,55.7z M148.4,55.2c-0.7,1-1.6,1.4-2.4,0.8c-0.8-0.5-0.9-1.6-0.2-2.6c0.6-1,1.6-1.4,2.4-0.8C149,53.1,149,54.2,148.4,55.2z M148.7,58.6l0.8,0.5l2-3.1c0.5-0.4,1.2-0.4,1.7-0.1c0.7,0.4,0.7,1.1,0.3,1.7l-1.9,2.9l0.8,0.5l2-3c0.6-1,0.5-2-0.5-2.7c-0.6-0.4-1.3-0.4-1.8-0.2l0.4-0.6l-0.8-0.5L148.7,58.6z M158.8,62.1l0.2-0.3c0.9-1.3,0.8-2.7-0.4-3.5c-1.2-0.8-2.7-0.3-3.6,1.1c-0.9,1.4-0.6,2.9,0.7,3.8c0.5,0.4,1.1,0.5,1.7,0.5l0.5-0.7c-0.6,0-1.1-0.1-1.6-0.4c-0.8-0.5-1.2-1.5-0.5-2.6L158.8,62.1z M158.1,59c0.7,0.5,0.7,1.3,0.3,2l-2.4-1.5C156.7,58.7,157.5,58.6,158.1,59z M160.8,65.7c0.2,0.6,0.8,1.3,1.6,1.9c1.2,0.8,2.6,0.7,3.3-0.3c0.6-0.9,0.5-1.7-0.3-2.7l-0.7-1c-0.4-0.6-0.7-1.1-0.3-1.6c0.4-0.6,1.2-0.6,1.9-0.1c0.7,0.5,1.1,1.1,1.4,1.8l0.6-0.9c-0.3-0.6-0.8-1.2-1.5-1.7c-1.1-0.7-2.4-0.8-3.1,0.3c-0.6,1-0.2,1.9,0.3,2.6l0.7,1c0.5,0.7,0.7,1.2,0.3,1.7c-0.4,0.7-1.2,0.7-2,0.1c-0.7-0.5-1.3-1.1-1.5-2L160.8,65.7z M169.5,66.5l1.1,0.7l0.4-0.7l-1.1-0.7l0.8-1.2l-0.8-0.5l-0.8,1.2l-1-0.6l-0.4,0.7l1,0.6l-2.5,3.9l0.8,0.5L169.5,66.5z M168.7,70.9c-0.2,0.3-0.1,0.7,0.2,0.9c0.3,0.2,0.7,0.1,0.9-0.2c0.2-0.3,0.1-0.7-0.2-0.9C169.3,70.4,168.9,70.5,168.7,70.9z M99.9,186.9c0.6-0.2,1.1-0.8,1-1.7c-0.1-1.3-1-2-2.6-1.9l-2.5,0.1l0.4,7.6l2.7-0.1c1.5-0.1,2.5-0.9,2.4-2.3C101.3,187.7,100.8,187,99.9,186.9z M97,186.7l-0.1-2.4l1.5-0.1c1-0.1,1.6,0.3,1.6,1.1c0,0.8-0.5,1.3-1.5,1.3L97,186.7z M97,187.5l1.8-0.1c1-0.1,1.6,0.4,1.6,1.2c0,0.8-0.5,1.3-1.5,1.4l-1.8,0.1L97,187.5z M105.3,185c-0.1,0-0.3-0.1-0.5-0.1c-0.6,0-1.1,0.4-1.3,0.9l0-0.7l-0.9,0l0.3,5.5l0.9,0l-0.2-3.7c0.2-0.6,0.6-1.1,1.2-1.1c0.2,0,0.5,0,0.6,0.1L105.3,185z M111.1,187.5c-0.1-1.7-1.2-2.8-2.7-2.7c-1.5,0.1-2.4,1.3-2.4,3c0.1,1.7,1.2,2.8,2.7,2.7C110.2,190.4,111.2,189.2,111.1,187.5z M110.1,187.5c0.1,1.2-0.5,2.1-1.5,2.1c-1,0.1-1.6-0.8-1.7-1.9c-0.1-1.2,0.5-2.1,1.5-2.1C109.4,185.5,110.1,186.3,110.1,187.5z M115.7,184.5l-0.8,0l-0.9,4.2l-1.4-4.1l-0.9,0l1.9,5.4l0.9,0l0.9-4.2l1.3,4.1l0.9,0l1.3-5.5l-0.9,0l-1,4.2L115.7,184.5z M120.2,189.8l0.9,0l-0.2-3.7c0.2-0.6,0.7-1.1,1.3-1.1c0.8,0,1.2,0.5,1.3,1.2l0.2,3.4l0.9,0l-0.2-3.6c-0.1-1.2-0.8-2-2-1.9c-0.7,0-1.3,0.4-1.6,0.9l0-0.7l-0.9,0L120.2,189.8z M129,189.3l2.4-0.1c2.2-0.1,3.6-1.7,3.5-4s-1.6-3.7-3.9-3.6l-2.4,0.1L129,189.3z M129.9,188.4l-0.3-5.8l1.4-0.1c1.7-0.1,2.8,1,2.9,2.8c0.1,1.8-0.9,3-2.6,3L129.9,188.4z M138.9,183.3c-0.1,0-0.3-0.1-0.5-0.1c-0.6,0-1.1,0.4-1.3,0.9l0-0.7l-0.9,0l0.3,5.5l0.9,0l-0.2-3.7c0.2-0.6,0.6-1.1,1.2-1.1c0.2,0,0.5,0,0.6,0.1L138.9,183.3z M139.4,188.2c0,0.4,0.3,0.6,0.7,0.6c0.4,0,0.6-0.3,0.6-0.7c0-0.4-0.3-0.7-0.7-0.6C139.6,187.5,139.3,187.8,139.4,188.2z M7.9,158.6l-0.8-0.5L4,162.9l-0.2-7L3,155.4L0,160v1.7l2.9-4.5l0.3,7.3l0.6,0.4L7.9,158.6z M10.6,166.1c0.9-1.4,0.7-2.9-0.6-3.8c-1.3-0.8-2.7-0.4-3.7,1s-0.7,2.9,0.6,3.8C8.2,168,9.7,167.5,10.6,166.1z M9.8,165.6c-0.6,1-1.6,1.4-2.4,0.8s-0.9-1.6-0.2-2.6c0.6-1,1.6-1.4,2.4-0.8S10.5,164.6,9.8,165.6z M15.5,166c-0.1-0.1-0.2-0.2-0.4-0.4c-0.5-0.3-1.1-0.3-1.6,0l0.4-0.6l-0.8-0.5l-3,4.6l0.8,0.5l2-3.1c0.5-0.4,1.1-0.5,1.6-0.2c0.2,0.1,0.4,0.3,0.4,0.5L15.5,166z M20.1,166c-0.1-0.2-0.3-0.3-0.5-0.5c-0.8-0.5-1.8-0.4-2.4,0.5l-0.5,0.8l-0.8-0.5l-0.4,0.7l0.8,0.5l-2.5,3.9l0.8,0.5l2.5-3.9l1,0.7l0.4-0.7l-1-0.7l0.5-0.7c0.4-0.5,0.8-0.6,1.3-0.3c0.2,0.1,0.3,0.3,0.4,0.4L20.1,166z M21.8,173.4c0.9-1.4,0.7-2.9-0.6-3.8c-1.3-0.8-2.7-0.4-3.7,1s-0.7,2.9,0.6,3.8C19.4,175.2,20.9,174.8,21.8,173.4z M21,172.9c-0.6,1-1.6,1.4-2.4,0.8c-0.8-0.5-0.9-1.6-0.2-2.6s1.6-1.4,2.4-0.8C21.6,170.8,21.6,171.9,21,172.9z M26.5,170.1l-0.8-0.5l-4.4,6.7l0.8,0.5L26.5,170.1z M26.7,176.3l3.6-0.6l-1-0.7l-3.3,0.6l2.6-4.1l-0.8-0.5l-4.4,6.7l0.8,0.5l1.5-2.3l0.6,3.6l1,0.6L26.7,176.3z M30.4,181.5c0.2,0.6,0.8,1.3,1.6,1.9c1.2,0.8,2.6,0.7,3.3-0.3c0.6-0.9,0.5-1.7-0.3-2.7l-0.7-1c-0.4-0.6-0.7-1.1-0.3-1.6c0.4-0.6,1.2-0.6,1.9-0.1c0.7,0.5,1.1,1.1,1.4,1.8l0.6-0.9c-0.3-0.6-0.8-1.2-1.5-1.7c-1.1-0.7-2.4-0.8-3.1,0.3c-0.6,1-0.2,1.9,0.3,2.6l0.7,1c0.5,0.7,0.7,1.2,0.3,1.7c-0.4,0.7-1.2,0.7-2,0.1c-0.7-0.5-1.3-1.1-1.5-2L30.4,181.5z M39.1,182.3l1.1,0.7l0.4-0.7l-1.1-0.7l0.8-1.2l-0.8-0.5l-0.8,1.2l-1-0.6l-0.4,0.7l1,0.6l-2.5,3.9l0.8,0.5L39.1,182.3z M38.3,186.7c-0.2,0.3-0.1,0.7,0.2,0.9c0.3,0.2,0.7,0.1,0.9-0.2s0.1-0.7-0.2-0.9C38.9,186.2,38.5,186.3,38.3,186.7z M65.9,162.7l-2.9-3.9l5.4,2.1l0.3-0.9l-7-2.8l-0.3,0.8l3.1,4.1l-5,0.9l-0.3,0.8l7,2.8l0.3-0.9l-5.4-2.1L65.9,162.7L65.9,162.7z M67.8,154.6c-0.3,0.1-0.7,0.6-0.9,1.1c-0.4,1.1-0.1,2.2,0.8,2.6c1,0.4,2-0.2,2.4-1.3c0.2-0.6,0.2-1.2,0-1.5l0.4,0.1l0.3-0.8l-3.4-1.4c-1.1-0.4-2,0-2.5,1.2c-0.2,0.6-0.3,1.3-0.2,1.7l0.8,0.3c-0.1-0.5-0.1-1.1,0.1-1.6c0.3-0.7,0.9-1.1,1.5-0.8L67.8,154.6z M69.2,155.2c0.3,0.3,0.4,0.9,0.2,1.4c-0.2,0.6-0.8,1.1-1.4,0.9c-0.6-0.2-0.6-0.9-0.4-1.6c0.2-0.5,0.7-0.9,1.1-0.9L69.2,155.2z M65.2,149.8c-0.3-0.1-0.6,0-0.8,0.3c-0.1,0.3,0,0.6,0.3,0.8c0.3,0.1,0.6,0,0.8-0.3C65.6,150.2,65.5,149.9,65.2,149.8z M66.7,150.5l-0.3,0.9l5.1,2l0.3-0.9L66.7,150.5z M72.4,151l0.3-0.9l-3.4-1.4c-0.5-0.4-0.7-1.1-0.4-1.7c0.3-0.8,0.9-0.9,1.6-0.7l3.2,1.3l0.3-0.9l-3.3-1.3c-1.1-0.4-2.1-0.1-2.6,1.1c-0.3,0.7-0.1,1.3,0.2,1.8l-0.6-0.3l-0.3,0.9L72.4,151z M74.9,142.9c0.6-0.3,1.1-1,1.5-2c0.5-1.4,0.2-2.7-1-3.1c-1-0.4-1.7-0.1-2.6,0.8l-0.9,0.9c-0.5,0.6-0.9,0.9-1.5,0.6c-0.7-0.3-0.8-1-0.5-1.8c0.3-0.8,0.9-1.3,1.5-1.7l-1-0.4c-0.6,0.4-1.1,1-1.4,1.8c-0.5,1.2-0.3,2.5,1,3c1.1,0.4,1.9-0.1,2.5-0.8l0.8-0.9c0.6-0.6,1-0.9,1.6-0.7c0.7,0.3,0.9,1,0.5,1.9c-0.3,0.8-0.9,1.5-1.7,1.9L74.9,142.9z M73.9,134.2l0.5-1.2l-0.7-0.3l-0.5,1.2l-1.3-0.5l-0.3,0.9l1.3,0.5l-0.4,1.1l0.7,0.3l0.4-1.1l4.4,1.7l0.3-0.9L73.9,134.2z M78.3,134.1c0.4,0.1,0.7,0,0.9-0.4c0.1-0.3,0-0.7-0.4-0.9c-0.4-0.1-0.7,0-0.9,0.4C77.8,133.6,78,134,78.3,134.1z',
				hands: [35, 35]
			}
		},

		tap: function(watch, event) {
			if (where.map.mapdata.mode == 'urbanmap') {
				where.map.mapdata.mode = 'ruralmap';
			} else {
				where.map.mapdata.mode = 'urbanmap';
			}
			$('.maplines, .maplabels').animate({'opacity': '0'}, 250).promise().done(function() {
				if (typeof watch.maprotation != 'undefined') {
					watch.mapgroup.transform('r' + 0 + ',' + watch.x + ',' + watch.y);
				}
				$('.maplines').attr('d', where.map.mapdata[where.map.mapdata.mode].lines);
				$('.maplabels').attr('d', where.map.mapdata[where.map.mapdata.mode].labels);
				$('.maplines').animate({'opacity': '.25'}, 500);
				$('.maplabels').animate({'opacity': '1'}, 500);
			});
			setTime(watch, where.map.mapdata[where.map.mapdata.mode].hands[0], where.map.mapdata[where.map.mapdata.mode].hands[1], 500);
		},

		doubletap: function(watch, event) {
			if (typeof watch.zoomed == 'undefined') {
				watch.maplines.animate({transform: 't' + (watch.x - 107.5) + ',' + (watch.y - 107.5) + 's1.375'}, 250, mina.backout);
				watch.maplabels.animate({transform: 't' + (watch.x - 107.5) + ',' + (watch.y - 107.5) + 's1.375'}, 250, mina.backout);
				watch.zoomed = 1;
			} else {
				watch.maplines.animate({transform: 't' + (watch.x - 107.5) + ',' + (watch.y - 107.5) + 's1'}, 250, mina.backout);
				watch.maplabels.animate({transform: 't' + (watch.x - 107.5) + ',' + (watch.y - 107.5) + 's1'}, 250, mina.backout);
				delete watch.zoomed;
			}
		},

		rotate: function(watch, event) {
			if (event.type == 'rotatestart') {
				if (window.DeviceOrientationEvent) {
					deviceorientation = 0;
					clearInterval(compassUpdate);
				}
				if (typeof watch.rotation == 'undefined') {
					watch.maprotation = 0;
					where.map.rotatecounter = 0;
				}
				rotateUpdate = setInterval(function() {
					if (typeof watch.initialheading != 'undefined') {
						setTime(watch, where.map.mapdata[where.map.mapdata.mode].hands[0] + watch.maprotation + where.map.rotatecounter - (watch.heading - watch.initialheading), where.map.mapdata[where.map.mapdata.mode].hands[1] + watch.maprotation + where.map.rotatecounter - (watch.heading - watch.initialheading), 100);
						watch.mapgroup.animate({transform: 'r' + (watch.maprotation + where.map.rotatecounter - (watch.heading - watch.initialheading)) + ',' + watch.x + ',' + watch.y}, 100);
					} else {
						setTime(watch, where.map.mapdata[where.map.mapdata.mode].hands[0] + watch.maprotation + where.map.rotatecounter, where.map.mapdata[where.map.mapdata.mode].hands[1] + watch.maprotation + where.map.rotatecounter, 100);
						watch.mapgroup.animate({transform: 'r' + (watch.maprotation + where.map.rotatecounter) + ',' + watch.x + ',' + watch.y}, 100);
					}
				}, 100);
			} else if (event.type == 'rotateend') {
				watch.maprotation += where.map.rotatecounter;
				clearInterval(rotateUpdate);
			} else {
				where.map.rotatecounter = event.rotation;
			}
		}
	},

	transit: {
		start: function(watch) {
			setInstructions(watch, '', '', '', '');
			updateWhereDots(watch);
			setTime(watch, 270, 270, 500);
			watch.linemasks = [
				watch.canvas.rect(
					watch.x + watch.width / 4.6 - 32,
					watch.y - 10,
					64,
					20)
					.attr({'class': 'linemasks'})
			];
			watch.linelabels = [
				watch.canvas.text(watch.x + watch.width / 4.6, watch.y + 5.25, 'Park St.')
					.attr({'font-size': '18px', 'class': 'linelabels'})
					.animate({'opacity': '1'}, 125)
			];
			watch.lines = [
				watch.canvas.line(
					watch.x - .5,
					watch.y,
					watch.x + .5,
					watch.y)
					.attr({'stroke-width': 3, 'class': 'lines'})
					.animate({transform: 's' + (watch.width - 45) + ',1'}, 125, mina.backout, function() {
						watch.lines[1] = watch.canvas.line(
							watch.x - .5,
							watch.y - (watch.width * (1/9)),
							watch.x + .5,
							watch.y - (watch.width * (1/9)))
							.attr({'stroke-width': 2, 'class': 'lines'})
							.animate({transform: 's' + (watch.width - 52) + ',1'}, 125, mina.backout);
						watch.linemasks[1] = watch.canvas.rect(
							watch.x - 42,
							watch.y - (watch.width * (1/9)) - 8,
							84,
							16)
							.attr({'class': 'linemasks'});
						watch.linelabels[1] = watch.canvas.text(watch.x, watch.y - (watch.width * (1/9)) + 4.25, 'Kendall / MIT')
							.attr({'font-size': '15px', 'class': 'linelabels'})
							.animate({'opacity': '1'}, 125);
						watch.interface.add(
							watch.lines[1],
							watch.linemasks[1],
							watch.linelabels[1]
						);
						watch.lines[2] = watch.canvas.line(
							watch.x - .5,
							watch.y + (watch.width * (1/9)),
							watch.x + .5,
							watch.y + (watch.width * (1/9)))
							.attr({'stroke-width': 2, 'class': 'lines'})
							.animate({transform: 's' + (watch.width - 52) + ',1'}, 125, mina.backout, function() {
								watch.lines[3] = watch.canvas.line(
									watch.x - .5,
									watch.y - (watch.width * (2/9)),
									watch.x + .5,
									watch.y - (watch.width * (2/9)))
									.attr({'stroke-width': 1, 'class': 'lines'})
									.animate({transform: 's' + (watch.width - 70) + ',1'}, 125, mina.backout);
								watch.linemasks[3] = watch.canvas.rect(
									watch.x - 38,
									watch.y - (watch.width * (2/9)) - 8,
									76,
									16)
									.attr({'class': 'linemasks'});
								watch.linelabels[3] = watch.canvas.text(watch.x, watch.y - (watch.width * (2/9)) + 3.25, 'Central Square')
									.attr({'font-size': '12px', 'class': 'linelabels'})
									.animate({'opacity': '1'}, 125);
								watch.interface.add(
									watch.lines[3],
									watch.linemasks[3],
									watch.linelabels[3]
								);
								watch.lines[4] = watch.canvas.line(
									watch.x - .5,
									watch.y + (watch.width * (2/9)),
									watch.x + .5,
									watch.y + (watch.width * (2/9)))
									.attr({'stroke-width': 1, 'class': 'lines'})
									.animate({transform: 's' + (watch.width - 70) + ',1'}, 125, mina.backout, function() {
										watch.lines[5] = watch.canvas.line(
											watch.x - .5,
											watch.y - (watch.width * (3/9)),
											watch.x + .5,
											watch.y - (watch.width * (3/9)))
											.attr({'stroke-width': .5, 'class': 'lines'})
											.animate({transform: 's' + (watch.width - 110) + ',1'}, 125, mina.backout);
										watch.linemasks[5] = watch.canvas.rect(
											watch.x - 19,
											watch.y - (watch.width * (3/9)) - 7,
											38,
											14)
											.attr({'class': 'linemasks'});
										watch.linelabels[5] = watch.canvas.text(watch.x, watch.y - (watch.width * (3/9)) + 3, 'Harvard')
											.attr({'font-size': '10px', 'class': 'linelabels'})
											.animate({'opacity': '1'}, 125);
										watch.interface.add(
											watch.lines[5],
											watch.linemasks[5],
											watch.linelabels[5]
										);
										watch.lines[6] = watch.canvas.line(
											watch.x - .5,
											watch.y + (watch.width * (3/9)),
											watch.x + .5,
											watch.y + (watch.width * (3/9)))
											.attr({'stroke-width': .5, 'class': 'lines'})
											.animate({transform: 's' + (watch.width - 110) + ',1'}, 125, mina.backout);
										watch.linemasks[6] = watch.canvas.rect(
											watch.x - 22,
											watch.y + (watch.width * (3/9)) - 7,
											44,
											14)
											.attr({'class': 'linemasks'});
										watch.linelabels[6] = watch.canvas.text(watch.x, watch.y + (watch.width * (3/9)) + 3, 'Broadway')
											.attr({'font-size': '10px', 'class': 'linelabels'})
											.animate({'opacity': '1'}, 125);
										watch.interface.add(
											watch.lines[6],
											watch.linemasks[6],
											watch.linelabels[6]
										);
									});
								watch.linemasks[4] = watch.canvas.rect(
									watch.x - 35,
									watch.y + (watch.width * (2/9)) - 8,
									70,
									16)
									.attr({'class': 'linemasks'});
								watch.linelabels[4] = watch.canvas.text(watch.x, watch.y + (watch.width * (2/9)) + 3.25, 'South Station')
									.attr({'font-size': '12px', 'class': 'linelabels'})
									.animate({'opacity': '1'}, 125, mina.backout);
								watch.interface.add(
									watch.lines[4],
									watch.linemasks[4],
									watch.linelabels[4]
								);
							});
						watch.linemasks[2] = watch.canvas.rect(
							watch.x - 60,
							watch.y + (watch.width * (1/9)) - 8,
							120,
							16)
							.attr({'class': 'linemasks'});
						watch.linelabels[2] = watch.canvas.text(watch.x, watch.y + (watch.width * (1/9)) + 4.25, 'Downtown Crossing')
							.attr({'font-size': '15px', 'class': 'linelabels'})
							.animate({'opacity': '1'}, 125);
						watch.interface.add(
							watch.lines[2],
							watch.linemasks[2],
							watch.linelabels[2]
						);
					})
			];
			watch.interface.add(
				watch.lines[0],
				watch.linemasks[0],
				watch.linelabels[0]
			);
		},

		end: function(watch, callback) {
			watch.linelabels[5].animate({'opacity': '0'}, 62.5);
			watch.lines[5].animate({transform: 's1,1'}, 62.5, mina.backout);
			watch.linelabels[6].animate({'opacity': '0'}, 62.5);
			watch.lines[6].animate({transform: 's1,1'}, 62.5, mina.backout, function() {
				watch.linelabels[4].animate({'opacity': '0'}, 62.5);
				watch.lines[4].animate({transform: 's1,1'}, 62.5, mina.backout);
				watch.linelabels[3].animate({'opacity': '0'}, 62.5);
				watch.lines[3].animate({transform: 's1,1'}, 62.5, mina.backout, function() {
					watch.linelabels[2].animate({'opacity': '0'}, 62.5);
					watch.lines[2].animate({transform: 's1,1'}, 62.5, mina.backout);
					watch.linelabels[1].animate({'opacity': '0'}, 62.5);
					watch.lines[1].animate({transform: 's1,1'}, 62.5, mina.backout, function() {
						watch.linelabels[0].animate({'opacity': '0'}, 62.5);
						watch.lines[0].animate({transform: 's1,1'}, 62.5, mina.backout, function() {
							delete watch.lines;
							delete watch.linemasks;
							delete watch.linelabels;
							watch.interface.clear();
							callback(watch);
						});
					});
				});
			});
		},

		tap: function(watch, event) {
			// console.log('tap!');
		},

		doubletap: function(watch, event) {
			// console.log('doubletap!');
		},

		rotate: function(watch, event) {
			// console.log('rotate!');
			// if (event.type == 'rotatestart') {

			// } else if (event.type == 'rotateend') {

			// } else {

			// }
		}
	},

	compass: {
		start: function(watch) {
			setInstructions(watch, '● to show diff of two', 'different headings', '●● to reset to single', '↺ to calibrate north');
			updateWhereDots(watch);
			watch.heading = 150;

			
			if (window.DeviceOrientationEvent) {
				deviceorientation = 1;
				window.addEventListener('deviceorientation', function(e) {
					if ((typeof e.webkitCompassHeading != 'undefined') && (deviceorientation == 1)) {
						watch.heading = e.webkitCompassHeading;
						if (watch.rotation > 0) {
							watch.compassLabel.attr('text', Math.round(360 - watch.heading - watch.rotation) + 'º');
						} else {
							watch.compassLabel.attr('text', Math.round(360 - watch.heading) + 'º');
						}
					}
				});
				compassUpdate = setInterval(function() {
					if (watch.heading > 0) {
						setTime(watch, 360-watch.heading, 360-watch.heading, 100);
						if (typeof watch.pie != 'undefined') {
							if (360 - watch.heading > watch.savedCompass) {
								setPie(watch, watch.pie, 27, watch.savedCompass, 360-watch.heading, 100);
							} else {
								setPie(watch, watch.pie, 27, 360-watch.heading, watch.savedCompass, 100);
							}
						}
					}
				}, 100);
			}

			watch.compassDial = newCompassDial(watch, 30)
				.attr({'class': 'compassDial'});
			watch.compassSubdial = newCompassSubdial(watch, 30)
				.attr({'class': 'compassSubdial'});

			watch.rose = watch.canvas.path(
				'm' + (watch.x - 1.5) + ',' + (watch.y + 1.5) +
				'l1.5,' + (-watch.width/7) +
				'l1.5,' + (watch.width/7) +
				'l' + (watch.width/7) + ',-1.5' +
				'l' + (-watch.width/7) + ',-1.5' +
				'l-1.5,' + (watch.width/7) +
				'l-1.5,' + (-watch.width/7) +
				'l' + (-watch.width/7) + ',1.5z'
			).attr({'class': 'rose'});

			watch.compassLabel = watch.canvas.text(watch.x, watch.y - 40, Math.round(360 - watch.heading) + 'º')
				.attr({'class': 'compasslabel'});

			watch.rotationgroup = watch.canvas.group();
			watch.rotationgroup.add(
				watch.compassDial,
				watch.compassSubdial,
				watch.compassLabel,
				watch.rose
			);
			watch.interface.add(watch.rotationgroup);

			setTime(watch, 220, 220, 500);
			$('.compasslabel, .rose').animate({'opacity': '1'}, 500);
			$('.compassDial text, .compassSubdial text').each(function(i) {
				$(this).delay(i*35).animate({'opacity': '1'}, 250);
			});

			if (typeof watch.rotation != 'undefined') {
				watch.rotationgroup.animate({transform: 'r' + watch.rotation + ',' + watch.x + ',' + watch.y}, 500);
			}
		},

		end: function(watch, callback) {
			if (window.DeviceOrientationEvent) {
				deviceorientation = 0;
				clearInterval(compassUpdate);
			}
			if (typeof watch.rotation != 'undefined') {
				watch.rotationgroup.animate({transform: 'r' + 0 + ',' + watch.x + ',' + watch.y}, 250);
			}
			$('.compasslabel, .rose, .compassHand, .savedcompasslabel').animate({'opacity': '0'}, 250);
			$('.compassDial text, .compassSubdial text').animate({'opacity': '0'}, 250).promise().done(function() {
				delete watch.compassDial;
				delete watch.compassSubdial;
				delete watch.compassLabel;
				delete watch.savedCompass;
				delete watch.savedCompassLabel;
				delete watch.compassHand;
				delete watch.pie;
				delete watch.rose;
				watch.interface.clear();
				callback(watch);
			});
		},

		tap: function(watch, event) {
			if (typeof watch.savedCompass != 'undefined') {
				watch.savedCompass = 360-watch.heading;
				setHand(watch, 'compassHand', watch.savedCompass, 100);
				watch.savedCompassLabel.attr('text', Math.round(360 - watch.heading) + 'º');
			} else {
				watch.compassHand = newDigitalHand(watch, 7, (watch.width/2)*.86, 360-watch.heading)
					.attr({'class': 'compassHand'});
				watch.savedCompass = 360-watch.heading;
				watch.savedCompassLabel = watch.canvas.text(watch.x, watch.y + 52, Math.round(360 - watch.heading) + 'º')
					.attr({'class': 'savedcompasslabel'});
				watch.pie = newPie(watch, 27, watch.savedCompass, 360-watch.heading);
				watch.pie.circle.attr({'class': 'pie'});
				watch.rotationgroup.add(
					watch.savedCompassLabel
				);
				watch.interface.add(
					watch.compassHand,
					watch.pie.circle
				);
				$('.compassHand, .savedcompasslabel').animate({'opacity': '1'}, 500);
			}
		},

		doubletap: function(watch, event) {
			if (typeof watch.rotation != 'undefined') {
				watch.rotationgroup.animate({transform: 'r' + 0 + ',' + watch.x + ',' + watch.y}, 500);
				watch.rotation = 0;
			}
			if (typeof watch.savedCompass != 'undefined') {
				$('.compassHand, .savedcompasslabel, .pie').animate({'opacity': '0'}, 250, function() {
					$(this).remove();
					delete watch.savedCompass;
					delete watch.savedCompassLabel;
					delete watch.compassHand;
					delete watch.pie;
				});
			}
		},

		rotate: function(watch, event) {
			if (event.type == 'rotatestart') {
				if (typeof watch.rotation == 'undefined') {
					watch.rotation = 0;
					where.compass.rotatecounter = 0;
				}
				rotateUpdate = setInterval(function() {
					watch.rotationgroup.animate({transform: 'r' + (watch.rotation + where.compass.rotatecounter) + ',' + watch.x + ',' + watch.y}, 100);
				}, 100);
			} else if (event.type == 'rotateend') {
				watch.rotation += where.compass.rotatecounter;
				clearInterval(rotateUpdate);
			} else {
				where.compass.rotatecounter = event.rotation;
			}
		}
	},

	weather: {
		start: function(watch) {
			setInstructions(watch, '↺ to view by the hour', '● to show tomorrow', '●+ to show forecast', '');
			updateWhereDots(watch);
			if (where.weather.mode < 2) {
				watch.weatherdial = newCalendarDial(watch, 28, 4.5, where.weather.modesettings[where.weather.mode][6])
					.attr({'class': 'weatherdial'});
				watch.weatherHand = newDigitalHand(watch, 7, (watch.width/2)*.7, 0)
					.attr({'class': 'weatherhand'});
				watch.weatherlabel = watch.canvas.text(watch.x, watch.y + 55, where.weather.modesettings[where.weather.mode][0])
					.attr({'class': 'weatherlabel'});
				watch.icon = watch.canvas.path(where.weather.icons[where.weather.modesettings[where.weather.mode][7]])
					.transform('t' + (watch.x - 35) + ',' + (watch.y - 35) + 's.85')
					.attr({'class': 'weathericon'});
				watch.interface.add(
					watch.weatherdial,
					watch.weatherHand,
					watch.weatherlabel,
					watch.icon
				);

				var anglemapper = 360 / (where.weather.modesettings[where.weather.mode][5] - where.weather.modesettings[where.weather.mode][4]);

				setHand(watch, 'weatherHand', (where.weather.modesettings[where.weather.mode][2] - where.weather.modesettings[where.weather.mode][4]) * anglemapper, 500);
				setTime(watch, (where.weather.modesettings[where.weather.mode][1] - where.weather.modesettings[where.weather.mode][4]) * anglemapper, (where.weather.modesettings[where.weather.mode][3] - where.weather.modesettings[where.weather.mode][4]) * anglemapper, 500);
				$('.weatherhand').animate({'opacity': '1'}, 500, function() {
					watch.highlabel = newhandlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][3], where.weather.modesettings[where.weather.mode][4], 'High', ((watch.width/2)*.86), 'highlabel');
					watch.lowlabel = newhandlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][1], where.weather.modesettings[where.weather.mode][4], 'Low', ((watch.width/2)*.55), 'lowlabel');
					watch.nowlabel = newhandlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][2], where.weather.modesettings[where.weather.mode][4], where.weather.modesettings[where.weather.mode][2] + 'º', ((watch.width/2)*.7), 'nowlabel');
					watch.interface.add(
						watch.highlabel,
						watch.lowlabel,
						watch.nowlabel
					);
					$('.highlabel, .lowlabel, .nowlabel').animate({'opacity': '1'}, 250);
				});
				$('.weathericon').animate({'opacity': '.25'}, 500);
				$('.weatherdial text, .weatherlabel').each(function(i) {
					$(this).delay(i*25).animate({'opacity': '1'}, 250);
				});
			} else {
				watch.weatherdial = newCalendarDial(watch, 28, 4.5, where.weather.modesettings[where.weather.mode][3])
					.attr({'class': 'weatherdial'});
				watch.weatherlabel = watch.canvas.text(watch.x, watch.y + 55, where.weather.modesettings[where.weather.mode][0])
					.attr({'class': 'weatherlabel'});
				watch.interface.add(
					watch.weatherdial,
					watch.weatherlabel
				);

				$('.weatherdial text, .weatherlabel').each(function(i) {
					$(this).delay(i*25).animate({'opacity': '1'}, 250);
				});

				watch.weatherHandOne = newDigitalHand(watch, 7, (watch.width/2)*.7, 0)
					.attr({'class': 'weatherhandone'});
				watch.weatherHandTwo = newDigitalHand(watch, 7, (watch.width/2)*.7, 0)
					.attr({'class': 'weatherhandtwo'});
				watch.interface.add(
					watch.weatherHandOne,
					watch.weatherHandTwo
				);

				var anglemapper = 360 / (where.weather.modesettings[where.weather.mode][2] - where.weather.modesettings[where.weather.mode][1]);

				setHand(watch, 'weatherHandOne', (where.weather.modesettings[where.weather.mode][4][1][0] - where.weather.modesettings[where.weather.mode][1]) * anglemapper, 500);
				setHand(watch, 'weatherHandTwo', (where.weather.modesettings[where.weather.mode][4][2][0] - where.weather.modesettings[where.weather.mode][1]) * anglemapper, 500);
				setTime(watch, (where.weather.modesettings[where.weather.mode][4][0][0] - where.weather.modesettings[where.weather.mode][1]) * anglemapper, (where.weather.modesettings[where.weather.mode][4][0][0] - where.weather.modesettings[where.weather.mode][1]) * anglemapper, 500);

				$('.weatherhandone, .weatherhandtwo').animate({'opacity': '1'}, 500).promise().done(function() {
					var nextday = watch.time.shortWeekday[watch.time.day + 2];
					var nextdayone = watch.time.shortWeekday[watch.time.day + 3];
					var nextdaytwo = watch.time.shortWeekday[watch.time.day + 4];
					watch.nextLabelOne = newhandlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][4][1][0], where.weather.modesettings[where.weather.mode][1], nextdayone + ' ' + where.weather.modesettings[where.weather.mode][4][1][0] + 'º', ((watch.width/2)*.7) - 10.5, 'nextlabelone');
					watch.labelIconOne = newiconlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][4][1][0], where.weather.modesettings[where.weather.mode][1], where.weather.modesettings[where.weather.mode][4][1][1], ((watch.width/2)*.7) - 4, 'labelicon');
					watch.nextLabelTwo = newhandlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][4][2][0], where.weather.modesettings[where.weather.mode][1], nextdaytwo + ' ' + where.weather.modesettings[where.weather.mode][4][2][0] + 'º', ((watch.width/2)*.7) - 10.5, 'nextlabeltwo');
					watch.labelIconTwo = newiconlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][4][2][0], where.weather.modesettings[where.weather.mode][1], where.weather.modesettings[where.weather.mode][4][2][1], ((watch.width/2)*.7) - 4, 'labelicon');
					watch.nextLabel = newhandlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][4][0][0], where.weather.modesettings[where.weather.mode][1], nextday + ' ' + where.weather.modesettings[where.weather.mode][4][0][0] + 'º', ((watch.width/2)*.7) - 11, 'nextlabel');
					watch.labelIcon = newiconlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][4][0][0], where.weather.modesettings[where.weather.mode][1], where.weather.modesettings[where.weather.mode][4][0][1], ((watch.width/2)*.7) - 4, 'labelicon');
					watch.interface.add(
						watch.nextLabelOne,
						watch.labelIconOne,
						watch.nextLabelTwo,
						watch.labelIconTwo,
						watch.nextLabel,
						watch.labelIcon
					);
					$('.nextlabelone, .nextlabeltwo, .nextlabel, .labelicon').animate({'opacity': '1'}, 250);
				});
			}
		},

		end: function(watch, callback) {
			$('.weatherdial text, .weatherlabel, .icon, .weatherhand, .weatherhandone, .weatherhandtwo, .nextlabelone, .nextlabeltwo, .nextlabel, .labelicon, .highlabel, .lowlabel, .nowlabel').animate({'opacity': '0'}, 250).promise().done(function() {
				delete watch.weatherdial;
				delete watch.weatherHand;
				delete watch.weatherHandOne;
				delete watch.weatherHandTwo;
				delete watch.nextLabelOne;
				delete watch.labelIconOne;
				delete watch.nextLabelTwo;
				delete watch.labelIconTwo;
				delete watch.nextLabel;
				delete watch.labelIcon;
				delete watch.weatherlabel;
				delete watch.icon;
				delete watch.highlabel;
				delete watch.lowlabel;
				delete watch.nowlabel;
				watch.interface.clear();
				callback(watch);
			});
		},

		mode: 0,

		modesettings: [
			['Today', 36, 47, 53, 0, 60, ['0º', '15º', '30º', '45º'], 'rain'],
			['Tomorrow', -12, 7, 32, -15, 45, ['-15º', '0º', '15º', '30º'], 'snow'],
			['Soon', 0, 60, ['0º', '15º', '30º', '45º'], [
				[7, 'rain'],
				[41, 'sun'],
				[47, 'cloud'],
			]],
			['Hourly', 36, 53, 0, 60, ['0º', '15º', '30º', '45º'], [
				[42, 'rain'],
				[43, 'rain'],
				[43, 'sun'],
				[48, 'sun'],
				[50, 'sun'],
				[48, 'cloud'],
				[46, 'cloud'],
				[45, 'cloud'],
				[41, 'cloud'],
				[39, 'cloud'],
				[39, 'rain'],
				[38, 'rain'],
			]]
		],

		icons: {
			rain: 'M18.8,52.6c-1.6-0.9-2.2-2.9-1.4-4.5c0.8-1.5,2.8-2.5,4.2-3.7c2.1-1.9,3.3-3.3,3.3-3.3c0,0-0.5,1.8-0.9,4.6c-0.3,1.9,0,4.1-0.8,5.6C22.4,52.8,20.4,53.4,18.8,52.6z M5.9,51.2c0.8-1.5,0.5-3.7,0.8-5.6C7.1,42.8,7.5,41,7.5,41c0,0-1.2,1.4-3.3,3.3c-1.4,1.3-3.4,2.3-4.2,3.7c-0.9,1.6-0.2,3.6,1.4,4.5C3.1,53.4,5,52.8,5.9,51.2z M8.4,58.9c-1.9,1.7-4.5,3-5.6,5c-1.1,2.1-0.3,4.8,1.8,6c2.2,1.1,4.8,0.3,6-1.8c1-2,0.6-4.9,1-7.4c0.5-3.7,1.2-6.1,1.2-6.1C12.8,54.4,11.1,56.3,8.4,58.9z M25.6,58.9c-1.9,1.7-4.5,3-5.6,5c-1.1,2.1-0.3,4.8,1.8,6c2.2,1.1,4.8,0.3,6-1.8c1-2,0.6-4.9,1-7.4c0.5-3.7,1.2-6.1,1.2-6.1C30,54.4,28.4,56.3,25.6,58.9z M56.3,44.3c-1.4,1.3-3.4,2.3-4.2,3.7c-0.9,1.6-0.2,3.6,1.4,4.5c1.6,0.8,3.6,0.2,4.5-1.4c0.8-1.5,0.5-3.7,0.8-5.6c0.4-2.8,0.9-4.6,0.9-4.6C59.6,41,58.4,42.4,56.3,44.3z M42.8,58.9c-1.9,1.7-4.5,3-5.6,5c-1.1,2.1-0.3,4.8,1.8,6c2.2,1.1,4.8,0.3,6-1.8c1-2,0.6-4.9,1-7.4c0.5-3.7,1.2-6.1,1.2-6.1C47.2,54.4,45.6,56.3,42.8,58.9z M40.6,51.2c0.8-1.5,0.5-3.7,0.8-5.6c0.4-2.8,0.9-4.6,0.9-4.6c0,0-1.2,1.4-3.3,3.3c-1.4,1.3-3.4,2.3-4.2,3.7c-0.9,1.6-0.2,3.6,1.4,4.5C37.8,53.4,39.8,52.8,40.6,51.2z M22.5,8.9c-2.7-1.7-6-2.1-7.8-2.1c-8.3,0-15,6.7-15,15c0,7.9,6.1,14.4,13.8,15v0.1h44.6c6.7,0,12.2-5.4,12.2-12.2c0-6.7-5.5-12.2-12.2-12.2c-0.7,0-1.4,0.1-2,0.2c-2.2-7.2-8.7-12.5-16.5-13v0c-0.4,0-0.8-0.1-1.2-0.1c-0.6,0-1.1,0-1.7,0.1c-0.1,0-0.3,0-0.4,0c-0.5,0.1-1,0.1-1.5,0.2c0,0-0.1,0-0.1,0c-0.5,0.1-1,0.2-1.5,0.4c-0.2,0-0.3,0.1-0.5,0.2c-0.4,0.1-0.8,0.3-1.2,0.4c-0.2,0.1-0.3,0.1-0.5,0.2c-0.4,0.2-0.8,0.4-1.2,0.6c-0.2,0.1-0.4,0.2-0.6,0.3c-0.3,0.2-0.5,0.3-0.8,0.5c-0.3,0.2-0.6,0.4-0.9,0.6c-0.2,0.2-0.5,0.3-0.7,0.5c-0.2,0.2-0.4,0.3-0.6,0.5c-0.2,0.1-0.3,0.3-0.5,0.4C25.4,5,25,5.3,24.7,5.7c-0.1,0.1-0.2,0.3-0.4,0.4c-0.2,0.2-0.4,0.5-0.6,0.7c-0.1,0.1-0.2,0.3-0.3,0.4c0,0,0,0,0,0c-0.3,0.4-0.5,0.8-0.7,1.3L22.5,8.9z',
			snow: 'M22.9,14.5c0.2-0.4,0.4-0.9,0.7-1.2c0,0,0,0,0,0c0.1-0.1,0.2-0.3,0.3-0.4c0.2-0.2,0.4-0.5,0.6-0.7c0.1-0.1,0.2-0.2,0.3-0.4c0.3-0.4,0.7-0.7,1.1-1.1c0.2-0.1,0.3-0.3,0.5-0.4c0.2-0.2,0.4-0.4,0.6-0.5c0.2-0.2,0.4-0.3,0.7-0.5c0.3-0.2,0.6-0.4,0.9-0.6c0.3-0.2,0.5-0.3,0.8-0.5c0.2-0.1,0.4-0.2,0.6-0.3c0.4-0.2,0.7-0.4,1.1-0.5c0.2-0.1,0.3-0.1,0.5-0.2c0.4-0.2,0.8-0.3,1.2-0.4c0.2-0.1,0.3-0.1,0.5-0.1c0.5-0.1,1-0.3,1.5-0.4c0,0,0.1,0,0.1,0c0.5-0.1,1-0.2,1.5-0.2c0.1,0,0.3,0,0.4,0c0.5,0,1.1-0.1,1.7-0.1c0.4,0,0.8,0,1.2,0.1v0c7.7,0.5,14.1,5.7,16.3,12.8c0.7-0.1,1.3-0.2,2-0.2c6.6,0,12,5.4,12,12c0,6.6-5.4,12-12,12h-44v-0.1c-7.6-0.6-13.7-7-13.7-14.8c0-8.2,6.6-14.8,14.8-14.8c1.8,0,5.1,0.4,7.7,2.1L22.9,14.5z M45.8,59h0.7l0.3,0.6l-0.3,0.5h-0.7l-0.4-0.5L45.8,59z M46.1,64.2l0.4-0.3v-1.2l0.7,0.4l0.3-0.2v-0.5l-1-0.6v-0.8l0.7,0.4v-0.8l0.7,0.4v1.2l0.4,0.2l0.4-0.2v-0.8l1,0.6l0.4-0.2v-0.5l-1-0.6l0.6-0.4V60l-0.3-0.2l-1,0.6L47.7,60l0.7-0.4l-0.7-0.4l0.7-0.5l1,0.6l0.3-0.2v-0.4l-0.7-0.4l1.1-0.6v-0.5L49.8,57l-1.1,0.6v-0.8l-0.4-0.2L48,56.8v1.3l-0.7,0.4v-0.9L46.5,58v-0.8l1-0.6v-0.4L47.2,56l-0.7,0.4v-1.2l-0.4-0.3l-0.4,0.3v1.2L45,56l-0.3,0.2v0.4l1,0.6V58L45,57.6l0,0.8L44.2,58l0-1.2l-0.4-0.2l-0.3,0.2v0.8L42.5,57l-0.4,0.2v0.5l1.1,0.6l-0.7,0.4v0.4l0.4,0.2l1-0.6l0.7,0.4l-0.7,0.4l0.7,0.4l0,0l-0.7,0.4l-1-0.6L42.5,60v0.4l0.7,0.4l-1.1,0.6v0.5l0.5,0.2l1.1-0.6v0.8l0.3,0.2l0.4-0.2v-1.2l0.7-0.4v0.8l0.7-0.5v0.8l-1,0.6v0.4l0.3,0.2l0.7-0.4v1.2L46.1,64.2z M54.5,49.3H55l0.3,0.4L55,50.2h-0.5l-0.3-0.4L54.5,49.3z M54.7,53.2l0.3-0.2v-0.9l0.5,0.3l0.3-0.1v-0.3L55,51.5v-0.6l0.5,0.3v-0.6l0.6,0.3v0.9l0.3,0.2l0.3-0.2v-0.6l0.8,0.4l0.3-0.2v-0.4L57,50.7l0.5-0.3v-0.3l-0.3-0.2l-0.8,0.4l-0.6-0.3l0.5-0.3l-0.5-0.3l0.5-0.3l0.8,0.5l0.3-0.1v-0.3L57,48.8l0.8-0.5V48l-0.3-0.2l-0.8,0.4v-0.6l-0.3-0.1l-0.3,0.1v1l-0.6,0.3v-0.7L55,48.6V48l0.8-0.4v-0.3l-0.3-0.2L55,47.4v-0.9l-0.3-0.2l-0.3,0.2v0.9l-0.5-0.3l-0.3,0.2v0.3l0.8,0.4v0.6l-0.6-0.3l0,0.6l-0.5-0.3l0-0.9L53,47.5l-0.2,0.2v0.6L52,47.8L51.6,48v0.4l0.8,0.4L52,49.1v0.3l0.3,0.1l0.8-0.4l0.5,0.3L53,49.8l0.5,0.3l0,0L53,50.4l-0.8-0.4L52,50.1v0.3l0.5,0.3l-0.8,0.5v0.4l0.3,0.1l0.8-0.5v0.6L53,52l0.3-0.2v-0.9l0.5-0.3v0.6l0.6-0.4v0.6l-0.8,0.4v0.3l0.3,0.2l0.5-0.3v0.9L54.7,53.2z M37.6,49.3h0.5l0.3,0.4l-0.2,0.4h-0.5l-0.3-0.4L37.6,49.3z M37.9,53.2l0.3-0.2v-0.9l0.5,0.3l0.3-0.1v-0.3l-0.8-0.4v-0.6l0.5,0.3v-0.6l0.6,0.3v0.9l0.3,0.2l0.3-0.2v-0.6l0.8,0.4l0.3-0.2v-0.4l-0.8-0.5l0.5-0.3v-0.3l-0.3-0.2l-0.8,0.4L39,50.1l0.5-0.3l-0.5-0.3l0.5-0.3l0.8,0.5l0.3-0.1v-0.3l-0.5-0.3l0.8-0.5V48l-0.3-0.2l-0.8,0.4v-0.6l-0.3-0.1l-0.3,0.1v1l-0.6,0.3v-0.7l-0.5,0.3V48l0.8-0.4v-0.3l-0.3-0.2l-0.5,0.3v-0.9l-0.3-0.2l-0.3,0.2v0.9l-0.5-0.3l-0.3,0.2v0.3l0.8,0.4v0.6L37,48.3l0,0.6l-0.5-0.3l0-0.9l-0.3-0.2l-0.2,0.2v0.6l-0.8-0.5L34.8,48v0.4l0.8,0.4l-0.5,0.3v0.3l0.3,0.1l0.8-0.4l0.5,0.3l-0.5,0.3l0.5,0.3l0,0l-0.5,0.3l-0.8-0.4l-0.3,0.2v0.3l0.5,0.3l-0.8,0.5v0.4l0.3,0.1l0.8-0.5v0.6l0.2,0.2l0.3-0.2v-0.9l0.5-0.3v0.6l0.6-0.4v0.6l-0.8,0.4v0.3l0.3,0.2l0.5-0.3v0.9L37.9,53.2z M20.6,49.3h0.5l0.3,0.4l-0.2,0.4h-0.5l-0.3-0.4L20.6,49.3z M20.8,53.2l0.3-0.2v-0.9l0.5,0.3l0.3-0.1v-0.3l-0.8-0.4v-0.6l0.5,0.3v-0.6l0.6,0.3v0.9l0.3,0.2l0.3-0.2v-0.6l0.8,0.4l0.3-0.2v-0.4l-0.8-0.5l0.5-0.3v-0.3l-0.3-0.2l-0.8,0.4L22,50.1l0.5-0.3L22,49.5l0.5-0.3l0.8,0.5l0.3-0.1v-0.3l-0.5-0.3l0.8-0.5V48l-0.3-0.2l-0.8,0.4v-0.6l-0.3-0.1l-0.3,0.1v1l-0.6,0.3v-0.7l-0.5,0.3V48l0.8-0.4v-0.3l-0.3-0.2l-0.5,0.3v-0.9l-0.3-0.2l-0.3,0.2v0.9L20,47.1l-0.3,0.2v0.3l0.8,0.4v0.6l-0.6-0.3l0,0.6l-0.5-0.3l0-0.9l-0.3-0.2l-0.2,0.2v0.6l-0.8-0.5L17.7,48v0.4l0.8,0.4L18,49.1v0.3l0.3,0.1l0.8-0.4l0.5,0.3l-0.5,0.3l0.5,0.3l0,0l-0.5,0.3l-0.8-0.4l-0.3,0.2v0.3l0.5,0.3l-0.8,0.5v0.4l0.3,0.1l0.8-0.5v0.6l0.2,0.2l0.3-0.2v-0.9l0.5-0.3v0.6l0.6-0.4v0.6l-0.8,0.4v0.3l0.3,0.2l0.5-0.3v0.9L20.8,53.2z M3.4,49.3H4l0.3,0.4L4,50.2H3.5l-0.3-0.4L3.4,49.3z M3.7,53.2L4,53.1v-0.9l0.5,0.3l0.3-0.1v-0.3L4,51.5v-0.6l0.5,0.3v-0.6l0.6,0.3v0.9L5.4,52l0.3-0.2v-0.6l0.8,0.4l0.3-0.2v-0.4L6,50.7l0.5-0.3v-0.3l-0.3-0.2l-0.8,0.4l-0.6-0.3l0.5-0.3l-0.5-0.3l0.5-0.3l0.8,0.5l0.3-0.1v-0.3L6,48.8l0.8-0.5V48l-0.3-0.2l-0.8,0.4v-0.6l-0.3-0.1l-0.3,0.1v1l-0.6,0.3v-0.7L4,48.6V48l0.8-0.4v-0.3l-0.3-0.2L4,47.4v-0.9l-0.3-0.2l-0.3,0.2v0.9l-0.5-0.3l-0.3,0.2v0.3L3.4,48v0.6l-0.6-0.3l0,0.6l-0.5-0.3l0-0.9L2,47.5l-0.2,0.2v0.6l-0.8-0.5L0.6,48v0.4l0.8,0.4l-0.5,0.3v0.3l0.3,0.1L2,49.1l0.5,0.3L2,49.8l0.5,0.3l0,0L2,50.4l-0.8-0.4l-0.3,0.2v0.3l0.5,0.3l-0.8,0.5v0.4L1,51.7l0.8-0.5v0.6L2,52l0.3-0.2v-0.9l0.5-0.3v0.6l0.6-0.4v0.6l-0.8,0.4v0.3l0.3,0.2l0.5-0.3v0.9L3.7,53.2z M28.7,59h0.7l0.3,0.6l-0.3,0.5h-0.7l-0.4-0.5L28.7,59z M29,64.2l0.4-0.3v-1.2l0.7,0.4l0.3-0.2v-0.5l-1-0.6v-0.8l0.7,0.4v-0.8l0.7,0.4v1.2l0.4,0.2l0.4-0.2v-0.8l1,0.6l0.4-0.2v-0.5l-1-0.6l0.6-0.4V60l-0.3-0.2l-1,0.6L30.6,60l0.7-0.4l-0.7-0.4l0.7-0.5l1,0.6l0.3-0.2v-0.4L32,58.3l1.1-0.6v-0.5L32.7,57l-1.1,0.6v-0.8l-0.4-0.2l-0.4,0.2v1.3l-0.7,0.4v-0.9L29.4,58v-0.8l1-0.6v-0.4L30.1,56l-0.7,0.4v-1.2L29,54.9l-0.4,0.3v1.2L28,56l-0.3,0.2v0.4l1,0.6V58l-0.8-0.4l0,0.8L27.2,58l0-1.2l-0.4-0.2l-0.3,0.2v0.8L25.4,57L25,57.2v0.5l1.1,0.6l-0.7,0.4v0.4l0.4,0.2l1-0.6l0.7,0.4l-0.7,0.4l0.7,0.4l0,0l-0.7,0.4l-1-0.6L25.4,60v0.4l0.7,0.4L25,61.4v0.5l0.5,0.2l1.1-0.6v0.8l0.3,0.2l0.4-0.2v-1.2l0.7-0.4v0.8l0.7-0.5v0.8l-1,0.6v0.4l0.3,0.2l0.7-0.4v1.2L29,64.2z M11.7,59h0.7l0.3,0.6l-0.3,0.5h-0.7l-0.4-0.5L11.7,59z M12.1,64.2l0.4-0.3v-1.2l0.7,0.4l0.3-0.2v-0.5l-1-0.6v-0.8l0.7,0.4v-0.8l0.7,0.4v1.2l0.4,0.2l0.4-0.2v-0.8l1,0.6l0.4-0.2v-0.5l-1-0.6l0.6-0.4V60l-0.3-0.2l-1,0.6L13.6,60l0.7-0.4l-0.7-0.4l0.7-0.5l1,0.6l0.3-0.2v-0.4L15,58.3l1.1-0.6v-0.5L15.7,57l-1.1,0.6v-0.8l-0.4-0.2l-0.4,0.2v1.3l-0.7,0.4v-0.9L12.5,58v-0.8l1-0.6v-0.4L13.2,56l-0.7,0.4v-1.2l-0.4-0.3l-0.4,0.3v1.2L11,56l-0.3,0.2v0.4l1,0.6V58l-0.8-0.4l0,0.8L10.2,58l0-1.2l-0.4-0.2l-0.3,0.2v0.8L8.4,57L8,57.2v0.5l1.1,0.6l-0.7,0.4v0.4l0.4,0.2l1-0.6l0.7,0.4l-0.7,0.4l0.7,0.4l0,0l-0.7,0.4l-1-0.6L8.4,60v0.4l0.7,0.4L8,61.4v0.5l0.5,0.2l1.1-0.6v0.8l0.3,0.2l0.4-0.2v-1.2l0.7-0.4v0.8l0.7-0.5v0.8l-1,0.6v0.4l0.3,0.2l0.7-0.4v1.2L12.1,64.2z',
			sun: 'M63.3,42.9c0.9-3.4,5.5-6.5,5.5-6.5c0.9-0.6,0.9-1.6,0-2.2c0,0-4.9-3.2-5.9-6.5c-1-3.3,1.1-7.9,1.1-7.9c0.4-1-0.1-1.9-1.1-2c0,0-5.1-0.6-7.3-3.1c-2.3-2.5-2.5-8.4-2.5-8.4c0-1.1-0.9-1.6-1.8-1.1c0,0-5,2.3-8.4,1.4c-3.4-0.9-6.5-5.5-6.5-5.5c-0.6-0.9-1.6-0.9-2.2,0c0,0-3.2,4.9-6.5,5.9c-3.3,1-7.9-1.1-7.9-1.1c-1-0.4-1.9,0.1-2,1.1c0,0-0.6,5.1-3.1,7.4c-2.5,2.3-8.4,2.5-8.4,2.5c-1.1,0-1.6,0.9-1.1,1.8c0,0,2.3,5,1.4,8.4c-0.9,3.4-5.5,6.5-5.5,6.5c-0.9,0.6-0.9,1.6,0,2.2c0,0,4.9,3.2,5.9,6.5c1,3.3-1.1,7.9-1.1,7.9c-0.4,1,0.1,1.9,1.1,2c0,0,5.1,0.6,7.3,3.1c2.3,2.5,2.5,8.4,2.5,8.4c0,1.1,0.9,1.6,1.8,1.1c0,0,5-2.3,8.4-1.4c3.4,0.9,6.5,5.5,6.5,5.5c0.6,0.9,1.6,0.9,2.2,0c0,0,3.2-4.9,6.5-5.9c3.3-1,7.9,1.1,7.9,1.1c1,0.4,1.9-0.1,2-1.1c0,0,0.6-5.1,3.1-7.3c2.5-2.3,8.4-2.5,8.4-2.5c1.1,0,1.6-0.9,1.1-1.8C64.7,51.2,62.4,46.2,63.3,42.9z M28.3,59.2C14.9,55.5,7,41.7,10.8,28.3c3.7-13.4,17.6-21.2,31-17.5s21.2,17.6,17.5,31C55.5,55.1,41.7,63,28.3,59.2z M55.9,40.8c-3.2,11.5-15.2,18.3-26.7,15.1S10.9,40.7,14.1,29.2c3.2-11.5,15.2-18.3,26.7-15.1S59.1,29.3,55.9,40.8z',
			cloud: 'M22.8,25.8c-2.6-1.7-5.9-2.1-7.7-2.1C7,23.8,0.4,30.4,0.4,38.5c0,7.7,6,14.1,13.6,14.7v0.1h43.8c6.6,0,11.9-5.3,11.9-11.9c0-6.6-5.3-11.9-11.9-11.9c-0.7,0-1.3,0.1-2,0.2c-2.2-7.1-8.6-12.3-16.2-12.8v0c-0.4,0-0.8-0.1-1.2-0.1c-0.6,0-1.1,0-1.6,0.1c-0.1,0-0.3,0-0.4,0c-0.5,0.1-1,0.1-1.5,0.2c0,0-0.1,0-0.1,0c-0.5,0.1-1,0.2-1.5,0.4c-0.2,0-0.3,0.1-0.5,0.1c-0.4,0.1-0.8,0.3-1.2,0.4c-0.2,0.1-0.3,0.1-0.5,0.2c-0.4,0.2-0.8,0.3-1.1,0.5c-0.2,0.1-0.4,0.2-0.6,0.3c-0.3,0.1-0.5,0.3-0.8,0.5c-0.3,0.2-0.6,0.4-0.9,0.6c-0.2,0.2-0.5,0.3-0.7,0.5c-0.2,0.2-0.4,0.3-0.6,0.5c-0.2,0.1-0.3,0.3-0.5,0.4c-0.4,0.3-0.7,0.7-1.1,1.1c-0.1,0.1-0.2,0.2-0.3,0.4c-0.2,0.2-0.4,0.5-0.6,0.7c-0.1,0.1-0.2,0.3-0.3,0.4c0,0,0,0,0,0c-0.3,0.4-0.5,0.8-0.7,1.2L22.8,25.8z'
		},

		tap: function(watch, event) {
			var oldmode = where.weather.mode;

			if (oldmode < 2) {
				where.weather.mode++;
			} else {
				where.weather.mode = 0;
			}

			if (where.weather.mode < 2) {

				if (where.weather.modesettings[oldmode][6] != where.weather.modesettings[where.weather.mode][6]) {
					$('.weatherdial text').animate({'opacity': '0'}, 250).promise().done(function() {
						$('.weatherdial').remove();
						delete watch.weatherdial;
						watch.weatherdial = newCalendarDial(watch, 28, 4.5, where.weather.modesettings[where.weather.mode][6])
							.attr({'class': 'weatherdial'});
						watch.interface.add(watch.weatherdial);
						$('.weatherdial text').each(function(i) {
							$(this).delay(i*25).animate({'opacity': '1'}, 250);
						});
					});
				}

				$('.weatherhandone, .weatherhandtwo, .nextlabelone, .nextlabeltwo, .nextlabel, .labelicon').animate({'opacity': '0'}, 250).promise().done(function() {
					$('.weatherhandone, .weatherhandtwo, .nextlabelone, .nextlabeltwo, .nextlabel, .labelicon').remove();
					delete watch.weatherHandOne;
					delete watch.weatherHandTwo;
					delete watch.nextLabelOne;
					delete watch.labelIconOne;
					delete watch.nextLabelTwo;
					delete watch.labelIconTwo;
					delete watch.nextLabel;
					delete watch.labelIcon;
				});
				
				$('.weatherlabel, .weathericon, .highlabel, .lowlabel, .nowlabel').animate({'opacity': '0'}, 250, function() {
					watch.weatherlabel.attr('text', where.weather.modesettings[where.weather.mode][0]);
					$('.weathericon').remove();
					delete watch.icon;
					watch.icon = watch.canvas.path(where.weather.icons[where.weather.modesettings[where.weather.mode][7]])
					.transform('t' + (watch.x - 35) + ',' + (watch.y - 35) + 's.85')
					.attr({'class': 'weathericon'});
					watch.interface.add(watch.icon);
					$('.weatherlabel').animate({'opacity': '1'}, 250);
					$('.weathericon').animate({'opacity': '.25'}, 250);
					$('.highlabel, .lowlabel, .nowlabel').remove();
					delete watch.highlabel;
					delete watch.lowlabel;
					delete watch.nowlabel;
					watch.highlabel = newhandlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][3], where.weather.modesettings[where.weather.mode][4], 'High', ((watch.width/2)*.86), 'highlabel');
					watch.lowlabel = newhandlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][1], where.weather.modesettings[where.weather.mode][4], 'Low', ((watch.width/2)*.55), 'lowlabel');
					watch.nowlabel = newhandlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][2], where.weather.modesettings[where.weather.mode][4], where.weather.modesettings[where.weather.mode][2] + 'º', ((watch.width/2)*.7), 'nowlabel');
					watch.interface.add(
						watch.highlabel,
						watch.lowlabel,
						watch.nowlabel
					);
					$('.highlabel, .lowlabel, .nowlabel').animate({'opacity': '1'}, 250);
				});

				var anglemapper = 360 / (where.weather.modesettings[where.weather.mode][5] - where.weather.modesettings[where.weather.mode][4]);

				if (typeof watch.weatherHand == 'undefined') {
					watch.weatherHand = newDigitalHand(watch, 7, (watch.width/2)*.7, 0)
						.attr({'class': 'weatherhand'});
					watch.interface.add(watch.weatherHand);
					$('.weatherhand').animate({'opacity': '1'}, 500);
				}

				setHand(watch, 'weatherHand', (where.weather.modesettings[where.weather.mode][2] - where.weather.modesettings[where.weather.mode][4]) * anglemapper, 500);
				setTime(watch, (where.weather.modesettings[where.weather.mode][1] - where.weather.modesettings[where.weather.mode][4]) * anglemapper, (where.weather.modesettings[where.weather.mode][3] - where.weather.modesettings[where.weather.mode][4]) * anglemapper, 500);
			} else {
				if (where.weather.modesettings[oldmode][6] != where.weather.modesettings[where.weather.mode][3]) {
					$('.weatherdial text').animate({'opacity': '0'}, 250).promise().done(function() {
						$('.weatherdial').remove();
						delete watch.weatherdial;
						watch.weatherdial = newCalendarDial(watch, 28, 4.5, where.weather.modesettings[where.weather.mode][3])
							.attr({'class': 'weatherdial'});
						watch.interface.add(watch.weatherdial);
						$('.weatherdial text').each(function(i) {
							$(this).delay(i*25).animate({'opacity': '1'}, 250);
						});
					});
				}

				$('.weatherlabel').animate({'opacity': '0'}, 250, function() {
					watch.weatherlabel.attr('text', where.weather.modesettings[where.weather.mode][0]);
					$('.weatherlabel').animate({'opacity': '1'}, 250);
				});

				$('.weatherhand, .weathericon, .highlabel, .lowlabel, .nowlabel').animate({'opacity': '0'}, 250).promise().done(function() {
					$('.weatherhand, .weathericon, .highlabel, .lowlabel, .nowlabel').remove();
					delete watch.weatherHand;
					delete watch.icon;
					delete watch.highlabel;
					delete watch.lowlabel;
					delete watch.nowlabel;
				});

				watch.weatherHandOne = newDigitalHand(watch, 7, (watch.width/2)*.7, 0)
					.attr({'class': 'weatherhandone'});
				watch.weatherHandTwo = newDigitalHand(watch, 7, (watch.width/2)*.7, 0)
					.attr({'class': 'weatherhandtwo'});
				watch.interface.add(
					watch.weatherHandOne,
					watch.weatherHandTwo
				);

				var anglemapper = 360 / (where.weather.modesettings[where.weather.mode][2] - where.weather.modesettings[where.weather.mode][1]);

				setHand(watch, 'weatherHandOne', (where.weather.modesettings[where.weather.mode][4][1][0] - where.weather.modesettings[where.weather.mode][1]) * anglemapper, 500);
				setHand(watch, 'weatherHandTwo', (where.weather.modesettings[where.weather.mode][4][2][0] - where.weather.modesettings[where.weather.mode][1]) * anglemapper, 500);
				setTime(watch, (where.weather.modesettings[where.weather.mode][4][0][0] - where.weather.modesettings[where.weather.mode][1]) * anglemapper, (where.weather.modesettings[where.weather.mode][4][0][0] - where.weather.modesettings[where.weather.mode][1]) * anglemapper, 500);

				$('.weatherhandone, .weatherhandtwo').animate({'opacity': '1'}, 500).promise().done(function() {
					var nextday = watch.time.shortWeekday[watch.time.day + 2];
					var nextdayone = watch.time.shortWeekday[watch.time.day + 3];
					var nextdaytwo = watch.time.shortWeekday[watch.time.day + 4];
					watch.nextLabelOne = newhandlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][4][1][0], where.weather.modesettings[where.weather.mode][1], nextdayone + ' ' + where.weather.modesettings[where.weather.mode][4][1][0] + 'º', ((watch.width/2)*.7) - 10.5, 'nextlabelone');
					watch.labelIconOne = newiconlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][4][1][0], where.weather.modesettings[where.weather.mode][1], where.weather.modesettings[where.weather.mode][4][1][1], ((watch.width/2)*.7) - 4, 'labelicon');
					watch.nextLabelTwo = newhandlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][4][2][0], where.weather.modesettings[where.weather.mode][1], nextdaytwo + ' ' + where.weather.modesettings[where.weather.mode][4][2][0] + 'º', ((watch.width/2)*.7) - 10.5, 'nextlabeltwo');
					watch.labelIconTwo = newiconlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][4][2][0], where.weather.modesettings[where.weather.mode][1], where.weather.modesettings[where.weather.mode][4][2][1], ((watch.width/2)*.7) - 4, 'labelicon');
					watch.nextLabel = newhandlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][4][0][0], where.weather.modesettings[where.weather.mode][1], nextday + ' ' + where.weather.modesettings[where.weather.mode][4][0][0] + 'º', ((watch.width/2)*.7) - 11, 'nextlabel');
					watch.labelIcon = newiconlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][4][0][0], where.weather.modesettings[where.weather.mode][1], where.weather.modesettings[where.weather.mode][4][0][1], ((watch.width/2)*.7) - 4, 'labelicon');
					watch.interface.add(
						watch.nextLabelOne,
						watch.labelIconOne,
						watch.nextLabelTwo,
						watch.labelIconTwo,
						watch.nextLabel,
						watch.labelIcon
					);
					$('.nextlabelone, .nextlabeltwo, .nextlabel, .labelicon').animate({'opacity': '1'}, 250);
				});
			}
		},

		doubletap: function(watch, event) {
			// console.log('doubletap!');
		},

		rotate: function(watch, event) {
			if (where.weather.mode == 0) {
				if (event.type == 'rotatestart') {
					watch.weatherHighShadow = newDigitalHand(watch, 7, (watch.width/2)*.86, watch.minutes)
						.attr({'class': 'weathershadows'});
					watch.weatherLowShadow = newDigitalHand(watch, 7, (watch.width/2)*.55, watch.hour)
						.attr({'class': 'weathershadows'});
					watch.interface.add(
						watch.weatherHighShadow,
						watch.weatherLowShadow
					);
					var anglemapper = 360 / (where.weather.modesettings[3][4] - where.weather.modesettings[3][3]);
					$('.nowlabel, .weatherlabel').animate({'opacity': '0'}, 125, function() {
						if ((watch.time.hour/360)*12 < 23) {
							watch.weatherlabel.attr('text', ((watch.time.hour/360)*12 + 1) + ':00');
						} else {
							watch.weatherlabel.attr('text', '0:00');
						}
						$('.nowlabel').remove();
						delete watch.nowlabel;
						watch.nowlabel = newhandlabel(watch, anglemapper, where.weather.modesettings[3][6][0][0], where.weather.modesettings[3][3], where.weather.modesettings[3][6][0][0] + 'º', ((watch.width/2)*.7), 'nowlabel');
						watch.interface.add(watch.nowlabel);
						$('.nowlabel, .weatherlabel').animate({'opacity': '1'}, 125);
					});
					if (where.weather.modesettings[3][6][0][1] != where.weather.modesettings[where.weather.mode][7]) {
						$('.weathericon').animate({'opacity': '0'}, 125, function() {
							$('.weathericon').remove();
							delete watch.icon;
							watch.icon = watch.canvas.path(where.weather.icons[where.weather.modesettings[3][6][0][1]])
								.transform('t' + (watch.x - 35) + ',' + (watch.y - 35) + 's.85')
								.attr({'class': 'weathericon'});
							watch.interface.add(watch.icon);
							$('.weathericon').animate({'opacity': '.25'}, 250);
						});
					}
					setTime(watch, (where.weather.modesettings[3][6][0][0] - where.weather.modesettings[3][3]) * anglemapper, (where.weather.modesettings[3][6][0][0] - where.weather.modesettings[3][3]) * anglemapper, 250);
					$('.weatherhand').animate({'opacity': '0'}, 250, function() {
						where.weather.rotatemodecounter = 0;
						rotateUpdate = setInterval(function() {
							if ((Math.abs(Math.floor(where.weather.rotatecounter/15)) != where.weather.rotatemodecounter) && (Math.abs(Math.floor(where.weather.rotatecounter/15)) < where.weather.modesettings[3][6].length)) {
								if (where.weather.modesettings[3][6][Math.abs(Math.floor(where.weather.rotatecounter/15))][1] != where.weather.modesettings[3][6][where.weather.rotatemodecounter][1]) {
									$('.weathericon').animate({'opacity': '0'}, 125, function() {
										$('.weathericon').remove();
										delete watch.icon;
										watch.icon = watch.canvas.path(where.weather.icons[where.weather.modesettings[3][6][Math.abs(Math.floor(where.weather.rotatecounter/15))][1]])
											.transform('t' + (watch.x - 35) + ',' + (watch.y - 35) + 's.85')
											.attr({'class': 'weathericon'});
										watch.interface.add(watch.icon);
										$('.weathericon').animate({'opacity': '.25'}, 250);
									});
								}
								where.weather.rotatemodecounter = Math.abs(Math.floor(where.weather.rotatecounter/15));
								var anglemapper = 360 / (where.weather.modesettings[3][4] - where.weather.modesettings[3][3]);
								$('.nowlabel, .weatherlabel').animate({'opacity': '0'}, 50, function() {
									if ((watch.time.hour/360)*12 < 23) {
										watch.weatherlabel.attr('text', ((watch.time.hour/360)*12 + where.weather.rotatemodecounter + 1) + ':00');
									} else {
										watch.weatherlabel.attr('text', '0:00');
									}
									$('.nowlabel').remove();
									delete watch.nowlabel;
									watch.nowlabel = newhandlabel(watch, anglemapper, where.weather.modesettings[3][6][where.weather.rotatemodecounter][0], where.weather.modesettings[3][3], where.weather.modesettings[3][6][where.weather.rotatemodecounter][0] + 'º', ((watch.width/2)*.7), 'nowlabel');
									watch.interface.add(watch.nowlabel);
									$('.nowlabel, .weatherlabel').animate({'opacity': '1'}, 50);
								});
								setTime(watch, (where.weather.modesettings[3][6][where.weather.rotatemodecounter][0] - where.weather.modesettings[3][3]) * anglemapper, (where.weather.modesettings[3][6][where.weather.rotatemodecounter][0] - where.weather.modesettings[3][3]) * anglemapper, 250);
							}
						}, 100);
					});
				} else if (event.type == 'rotateend') {
					$('.weatherhand').animate({'opacity': '1'}, 250, function() {
						$('.weathershadows').remove();
						delete watch.weatherHighShadow;
						delete watch.weatherLowShadow;
					});
					var anglemapper = 360 / (where.weather.modesettings[where.weather.mode][5] - where.weather.modesettings[where.weather.mode][4]);
					$('.nowlabel, .weatherlabel').animate({'opacity': '0'}, 125, function() {
						watch.weatherlabel.attr('text', where.weather.modesettings[where.weather.mode][0]);
						$('.nowlabel').remove();
						delete watch.nowlabel;
						watch.nowlabel = newhandlabel(watch, anglemapper, where.weather.modesettings[where.weather.mode][2], where.weather.modesettings[where.weather.mode][4], where.weather.modesettings[where.weather.mode][2] + 'º', ((watch.width/2)*.7), 'nowlabel');
						watch.interface.add(watch.nowlabel);
						$('.nowlabel, .weatherlabel').animate({'opacity': '1'}, 125);
					});
					if (where.weather.modesettings[3][6][where.weather.rotatemodecounter][1] != where.weather.modesettings[where.weather.mode][7]) {
						$('.weathericon').animate({'opacity': '0'}, 125, function() {
							$('.weathericon').remove();
							delete watch.icon;
							watch.icon = watch.canvas.path(where.weather.icons[where.weather.modesettings[where.weather.mode][7]])
								.transform('t' + (watch.x - 35) + ',' + (watch.y - 35) + 's.85')
								.attr({'class': 'weathericon'});
							watch.interface.add(watch.icon);
							$('.weathericon').animate({'opacity': '.25'}, 250);
						});
					}
					setTime(watch, (where.weather.modesettings[where.weather.mode][1] - where.weather.modesettings[where.weather.mode][4]) * anglemapper, (where.weather.modesettings[where.weather.mode][3] - where.weather.modesettings[where.weather.mode][4]) * anglemapper, 250);
					clearInterval(rotateUpdate);
				} else {
					where.weather.rotatecounter = event.rotation;
				}
			}
		}
	},

	button: function(watch) {
		switch (watch.mode) {
			case 0:
				where.start(watch);
				break;
			case 1:
				when.end(watch, where.start);
				break;
			case 2:
				what.end(watch, where.start);
				break;
			case 3:
				if (where.mode+1 < where.modes.length) {
					where[where.modes[where.mode]].end(watch,
					where[where.modes[where.mode+1]].start);
					where.mode++;
				} else {
					where[where.modes[where.mode]].end(watch,
					where[where.modes[1]].start);
					where.mode = 1;
				}
				$('.h2').fadeOut(250, function() {
					$(this).text(where.modes[where.mode]);
					$(this).fadeIn(250);
				});
				break;
		}
	},

	tap: function(watch, event) {
		where[where.modes[where.mode]].tap(watch, event);
	},

	doubletap: function(watch, event) {
		where[where.modes[where.mode]].doubletap(watch, event);
	},

	rotate: function(watch, event) {
		where[where.modes[where.mode]].rotate(watch, event);
	}
}

function newCompassDial(watch, offset) {
	var compass = watch.canvas.group(watch.canvas.text(watch.x, watch.y - (watch.width/2) + offset + 6, 'N'));
	var text = 'NESW'
	for (var i=1; i<4; i++) {
		var x = watch.x + ((watch.width/2) - offset) * Math.cos(2 * Math.PI * (i-1) / 4);
		var y = watch.y + ((watch.width/2) - offset) * Math.sin(2 * Math.PI * (i-1) / 4) + 6;
		compass.add(watch.canvas.text(x, y, text[i]));
	}
	return compass;
}

function newCompassSubdial(watch, offset) {
	var compassSubdial = watch.canvas.group();
	var text = ['N', '30º', '60º', 'E', '120º', '150º', 'S', '210º', '240º', 'W', '270º', '300º'];
	for (var i=1; i<12; i++) {
		var x = watch.x + ((watch.width/2) - offset) * Math.cos(2 * Math.PI * (i-3) / 12);
		var y = watch.y + ((watch.width/2) - offset) * Math.sin(2 * Math.PI * (i-3) / 12) + 6;
		compassSubdial.add(watch.canvas.text(x, y, text[i]));
		if (i == 2 || i == 5 || i == 8) {i+=1};
	}
	return compassSubdial;
}

function newhandlabel(watch, anglemapper, anglevalue, angleoffset, text, handlength, name) {
	var angle = (anglevalue - angleoffset) * anglemapper + 90;
	if (angle < 270) {
		label = watch.canvas.text(watch.x, watch.y, text)
			.transform('r180,' + watch.x + ',' + watch.y + 'r' + angle + ',' + watch.x + ',' + watch.y + 't' + handlength + ',-8')
			.attr({'class': name + ' flipped'});
	} else {
		label = watch.canvas.text(watch.x, watch.y, text)
			.transform('r' + angle + ',' + watch.x + ',' + watch.y + 't' + -handlength + ',-8')
			.attr({'class': name});
	}
	return label;
}

function newiconlabel(watch, anglemapper, anglevalue, angleoffset, icontype, handlength, name) {
	var angle = (anglevalue - angleoffset) * anglemapper + 90;
	if (angle < 270) {
		icon = watch.canvas.path(where.weather.icons[icontype])
			.transform(
				't' + (watch.x - 35) + ',' + (watch.y - 35) +
				'r180,' + 35 + ',' + 35 + 'r' + angle + ',' + 35 + ',' + 35 + 't' + handlength + ',-11' + 's.12'
			)
			.attr({'class': name});
	} else {
		icon = watch.canvas.path(where.weather.icons[icontype])
			.transform(
				't' + (watch.x - 35) + ',' + (watch.y - 35) +
				'r' + angle + ',' + 35 + ',' + 35 + 't' + -handlength + ',-11' + 's.12'
			)
			.attr({'class': name});
	}
	return icon;
}

function updateWhereDots(watch) {
	$('.buttonlabel').removeClass('active');
	$('.buttonlabel').animate({'opacity': '.25'}, 250).promise().done(function() {
		watch.buttonlabel3[where.mode-1].addClass('active');
		$(watch.buttonlabel3[where.mode-1].node).animate({'opacity': '1'}, 250);
	});
}